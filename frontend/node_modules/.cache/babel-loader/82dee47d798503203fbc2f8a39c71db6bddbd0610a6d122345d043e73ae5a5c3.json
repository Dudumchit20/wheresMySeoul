{"ast":null,"code":"import React,{useState,useEffect}from'react';import\"./Home.css\";import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function TextField(){const inputStyle={color:\"black\",border:\"0px solid gray\",borderRadius:\"5px\",width:\"100%\",height:\"40px\",margin:\"0px 10px\",outline:\"none\"};const textFieldStyle={flex:1,fontSize:\"20px\",display:\"flex\",flexDirection:\"row\",alignItems:\"center\"};const[inputValue,setInputValue]=useState('');useEffect(()=>{if(navigator.geolocation){navigator.geolocation.getCurrentPosition(async position=>{const{latitude,longitude}=position.coords;const coords=\"\".concat(longitude,\",\").concat(latitude);try{const response=await axios.get('http://localhost:3001/api/proxy',{params:{coords,sourcecrs:'epsg:4326',orders:'legalcode',output:'json'}});const data=response.data;if(data.results&&data.results.length>0){// 주소 결과를 입력 값으로 설정\nsetInputValue(data.results[0].region.area1.name+\" \"+data.results[0].region.area2.name+\" \"+data.results[0].region.area3.name);}else{setInputValue(\"주소를 찾을 수 없습니다.\");}}catch(error){console.log('Error during geocoding:',error);setInputValue(\"Geocoding error.\");}},error=>{console.log('Geolocation error:',error);setInputValue(\"Location access denied.\");});}else{setInputValue(\"Geolocation not supported.\");}},[]);const handleChange=event=>{setInputValue(event.target.value);};const handleClear=()=>{setInputValue('');};return/*#__PURE__*/_jsxs(\"div\",{style:textFieldStyle,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:inputValue,onChange:handleChange,style:inputStyle,placeholder:\"\\uC6D0\\uD558\\uB294 \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button_none\",onClick:handleClear,children:/*#__PURE__*/_jsx(\"img\",{src:\"/png/close.png\",alt:\"close\"})})]});}export default TextField;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","TextField","inputStyle","color","border","borderRadius","width","height","margin","outline","textFieldStyle","flex","fontSize","display","flexDirection","alignItems","inputValue","setInputValue","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","concat","response","get","params","sourcecrs","orders","output","data","results","length","region","area1","name","area2","area3","error","console","log","handleChange","event","target","value","handleClear","style","children","type","onChange","placeholder","className","onClick","src","alt"],"sources":["/Users/p_kxn_g/Documents/GitHub/wheresMySeoul/frontend/awes/src/TextField.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"./Home.css\";\nimport axios from 'axios';\n\nfunction TextField() {\n  const inputStyle = {\n    color: \"black\",\n    border: \"0px solid gray\",\n    borderRadius: \"5px\",\n    width: \"100%\",\n    height: \"40px\",\n    margin: \"0px 10px\",\n    outline: \"none\"\n  };\n\n  const textFieldStyle = {\n    flex: 1,\n    fontSize: \"20px\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  };\n\n  const [inputValue, setInputValue] = useState('');\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(async (position) => {\n            const { latitude, longitude } = position.coords;\n            const coords = `${longitude},${latitude}`;\n\n            try {\n                const response = await axios.get('http://localhost:3001/api/proxy', {\n                    params: {\n                        coords,\n                        sourcecrs: 'epsg:4326',\n                        orders: 'legalcode',\n                        output: 'json'\n                    }\n                });\n\n                const data = response.data;\n                if (data.results && data.results.length > 0) {\n                    // 주소 결과를 입력 값으로 설정\n                    setInputValue(\n                        data.results[0].region.area1.name + \" \" +\n                        data.results[0].region.area2.name + \" \" +\n                        data.results[0].region.area3.name\n                    );\n                } else {\n                    setInputValue(\"주소를 찾을 수 없습니다.\");\n                }\n            } catch (error) {\n                console.log('Error during geocoding:', error);\n                setInputValue(\"Geocoding error.\");\n            }\n        }, (error) => {\n            console.log('Geolocation error:', error);\n            setInputValue(\"Location access denied.\");\n        });\n    } else {\n        setInputValue(\"Geolocation not supported.\");\n    }\n}, []);\n\n  const handleChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleClear = () => {\n    setInputValue('');\n  };\n\n  return (\n    <div style={textFieldStyle}>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleChange}\n        style={inputStyle}\n        placeholder=\"원하는 주소를 입력해주세요\"\n      />\n      <button className=\"button_none\" onClick={handleClear}>\n        <img src=\"/png/close.png\" alt=\"close\" />\n      </button>\n    </div>\n  );\n}\n\nexport default TextField;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}