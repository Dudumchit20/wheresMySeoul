{"ast":null,"code":"var _jsxFileName = \"/Users/p_kxn_g/Documents/GitHub/wheresMySeoul/frontend/awes/src/search/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, Marker } from '@react-google-maps/api';\nimport \"./Map.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '100%'\n};\nconst defaultCenter = {\n  lat: 37.5665,\n  lng: 126.9780\n};\nconst markerIcons = {\n  \"자연\": \"http://maps.google.com/mapfiles/ms/icons/green-dot.png\",\n  \"쇼핑\": \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\",\n  \"명소\": \"http://maps.google.com/mapfiles/ms/icons/pink-dot.png\",\n  \"음식\": \"http://maps.google.com/mapfiles/ms/icons/orange-dot.png\",\n  \"관광거리\": \"http://maps.google.com/mapfiles/ms/icons/purple-dot.png\",\n  \"외국인\": \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\",\n  \"문화\": \"http://maps.google.com/mapfiles/ms/icons/yellow-dot.png\"\n};\nconst Map = ({\n  selectedFilters\n}) => {\n  _s();\n  const [currentPosition, setCurrentPosition] = useState(defaultCenter);\n  const [markers, setMarkers] = useState([]);\n  useEffect(() => {\n    // 현재 위치를 설정\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(position => {\n        setCurrentPosition({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      }, () => {\n        console.error(\"Geolocation is not supported or permission denied.\");\n      });\n    }\n  }, []);\n  useEffect(() => {\n    const fetchMarkers = async () => {\n      const allMarkers = [];\n      for (const filter of selectedFilters) {\n        const response = await fetch(`http://54.172.167.243:8080/searchOneCategory?address=중구&category=${filter}`);\n        const data = await response.json();\n        allMarkers.push(...data.map(item => ({\n          ...item,\n          lat: parseFloat(item.lat),\n          lng: parseFloat(item.lng),\n          type: filter\n        })));\n      }\n      setMarkers(allMarkers);\n    };\n    if (selectedFilters.length > 0) {\n      fetchMarkers();\n    } else {\n      setMarkers([]); // 필터가 선택되지 않으면 마커 초기화\n    }\n  }, [selectedFilters]);\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: currentPosition,\n    zoom: 13,\n    children: markers.map((marker, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: marker.lat,\n        lng: marker.lng\n      },\n      icon: markerIcons[marker.type] || \"http://maps.google.com/mapfiles/ms/icons/yellow-dot.png\",\n      title: marker.name\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"+i+kGqkHpHSj01putLT8J8lKAq8=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","Marker","jsxDEV","_jsxDEV","containerStyle","width","height","defaultCenter","lat","lng","markerIcons","Map","selectedFilters","_s","currentPosition","setCurrentPosition","markers","setMarkers","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","console","error","fetchMarkers","allMarkers","filter","response","fetch","data","json","push","map","item","parseFloat","type","length","mapContainerStyle","center","zoom","children","marker","index","icon","title","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/p_kxn_g/Documents/GitHub/wheresMySeoul/frontend/awes/src/search/Map.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { GoogleMap, Marker } from '@react-google-maps/api';\nimport \"./Map.css\";\n\nconst containerStyle = {\n  width: '100%',\n  height: '100%'\n};\n\nconst defaultCenter = {\n  lat: 37.5665,\n  lng: 126.9780\n};\n\nconst markerIcons = {\n  \"자연\": \"http://maps.google.com/mapfiles/ms/icons/green-dot.png\",\n  \"쇼핑\": \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\",\n  \"명소\": \"http://maps.google.com/mapfiles/ms/icons/pink-dot.png\",\n  \"음식\": \"http://maps.google.com/mapfiles/ms/icons/orange-dot.png\",\n  \"관광거리\": \"http://maps.google.com/mapfiles/ms/icons/purple-dot.png\",\n  \"외국인\": \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\",\n  \"문화\": \"http://maps.google.com/mapfiles/ms/icons/yellow-dot.png\"\n};\n\nconst Map = ({ selectedFilters }) => {\n  const [currentPosition, setCurrentPosition] = useState(defaultCenter);\n  const [markers, setMarkers] = useState([]);\n\n  useEffect(() => {\n    // 현재 위치를 설정\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        setCurrentPosition({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      }, () => {\n        console.error(\"Geolocation is not supported or permission denied.\");\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    const fetchMarkers = async () => {\n      const allMarkers = [];\n      for (const filter of selectedFilters) {\n        const response = await fetch(`http://54.172.167.243:8080/searchOneCategory?address=중구&category=${filter}`);\n        const data = await response.json();\n        allMarkers.push(...data.map(item => ({\n          ...item,\n          lat: parseFloat(item.lat),\n          lng: parseFloat(item.lng),\n          type: filter\n        })));\n      }\n      setMarkers(allMarkers);\n    };\n\n    if (selectedFilters.length > 0) {\n      fetchMarkers();\n    } else {\n      setMarkers([]); // 필터가 선택되지 않으면 마커 초기화\n    }\n  }, [selectedFilters]);\n\n  return (\n    <GoogleMap\n      mapContainerStyle={containerStyle}\n      center={currentPosition}\n      zoom={13}\n    >\n      {markers.map((marker, index) => (\n        <Marker\n          key={index}\n          position={{ lat: marker.lat, lng: marker.lng }}\n          icon={markerIcons[marker.type] || \"http://maps.google.com/mapfiles/ms/icons/yellow-dot.png\"}\n          title={marker.name}\n        />\n      ))}\n    </GoogleMap>\n  );\n};\n\nexport default Map;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,MAAM,QAAQ,wBAAwB;AAC1D,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,OAAO;EACZC,GAAG,EAAE;AACP,CAAC;AAED,MAAMC,WAAW,GAAG;EAClB,IAAI,EAAE,wDAAwD;EAC9D,IAAI,EAAE,uDAAuD;EAC7D,IAAI,EAAE,uDAAuD;EAC7D,IAAI,EAAE,yDAAyD;EAC/D,MAAM,EAAE,yDAAyD;EACjE,KAAK,EAAE,sDAAsD;EAC7D,IAAI,EAAE;AACR,CAAC;AAED,MAAMC,GAAG,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAACQ,aAAa,CAAC;EACrE,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd;IACA,IAAI,aAAa,IAAIoB,SAAS,EAAE;MAC9BA,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAEC,QAAQ,IAAK;QACrDN,kBAAkB,CAAC;UACjBP,GAAG,EAAEa,QAAQ,CAACC,MAAM,CAACC,QAAQ;UAC7Bd,GAAG,EAAEY,QAAQ,CAACC,MAAM,CAACE;QACvB,CAAC,CAAC;MACJ,CAAC,EAAE,MAAM;QACPC,OAAO,CAACC,KAAK,CAAC,oDAAoD,CAAC;MACrE,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,EAAE,CAAC;EAEN5B,SAAS,CAAC,MAAM;IACd,MAAM6B,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,UAAU,GAAG,EAAE;MACrB,KAAK,MAAMC,MAAM,IAAIjB,eAAe,EAAE;QACpC,MAAMkB,QAAQ,GAAG,MAAMC,KAAK,CAAE,oEAAmEF,MAAO,EAAC,CAAC;QAC1G,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,UAAU,CAACM,IAAI,CAAC,GAAGF,IAAI,CAACG,GAAG,CAACC,IAAI,KAAK;UACnC,GAAGA,IAAI;UACP5B,GAAG,EAAE6B,UAAU,CAACD,IAAI,CAAC5B,GAAG,CAAC;UACzBC,GAAG,EAAE4B,UAAU,CAACD,IAAI,CAAC3B,GAAG,CAAC;UACzB6B,IAAI,EAAET;QACR,CAAC,CAAC,CAAC,CAAC;MACN;MACAZ,UAAU,CAACW,UAAU,CAAC;IACxB,CAAC;IAED,IAAIhB,eAAe,CAAC2B,MAAM,GAAG,CAAC,EAAE;MAC9BZ,YAAY,CAAC,CAAC;IAChB,CAAC,MAAM;MACLV,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;IAClB;EACF,CAAC,EAAE,CAACL,eAAe,CAAC,CAAC;EAErB,oBACET,OAAA,CAACH,SAAS;IACRwC,iBAAiB,EAAEpC,cAAe;IAClCqC,MAAM,EAAE3B,eAAgB;IACxB4B,IAAI,EAAE,EAAG;IAAAC,QAAA,EAER3B,OAAO,CAACmB,GAAG,CAAC,CAACS,MAAM,EAAEC,KAAK,kBACzB1C,OAAA,CAACF,MAAM;MAELoB,QAAQ,EAAE;QAAEb,GAAG,EAAEoC,MAAM,CAACpC,GAAG;QAAEC,GAAG,EAAEmC,MAAM,CAACnC;MAAI,CAAE;MAC/CqC,IAAI,EAAEpC,WAAW,CAACkC,MAAM,CAACN,IAAI,CAAC,IAAI,yDAA0D;MAC5FS,KAAK,EAAEH,MAAM,CAACI;IAAK,GAHdH,KAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIX,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEhB,CAAC;AAACvC,EAAA,CAzDIF,GAAG;AAAA0C,EAAA,GAAH1C,GAAG;AA2DT,eAAeA,GAAG;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}