{"ast":null,"code":"import React,{useEffect}from'react';import'leaflet/dist/leaflet.css';import L from'leaflet';import{jsx as _jsx}from\"react/jsx-runtime\";const Map=()=>{useEffect(()=>{// Leaflet 지도를 생성하고 설정합니다.\nconst map=L.map('map');// OpenStreetMap 타일 레이어를 추가합니다.\nL.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',{attribution:'&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'}).addTo(map);// 사용자 정의 마커 아이콘 설정\nconst customIcon=L.icon({iconUrl:'/png/marker_icon.png',// 마커 아이콘 이미지 URL\niconSize:[41,41],// 마커 아이콘 크기\niconAnchor:[12,41],// 마커 아이콘 위치 조절\npopupAnchor:[1,-34]// 팝업 위치 조절\n});// Leaflet 맵의 중앙을 서울로 설정합니다.\nmap.setView([37.5665,126.9780],13);// 현재 위치를 가져와서 지도에 마커로 표시합니다.\nif(\"geolocation\"in navigator){navigator.geolocation.getCurrentPosition(position=>{const{latitude,longitude}=position.coords;// Leaflet 맵의 중앙을 현재 위치로 설정합니다.\nmap.setView([latitude,longitude],13);// 현재 위치에 마커 추가\nL.marker([latitude,longitude],{icon:customIcon}).addTo(map).bindPopup(\"현재 위치\").openPopup();});}else{console.log(\"Geolocation is not supported by this browser.\");}// useEffect에서 반환된 함수는 컴포넌트가 언마운트될 때 정리(clean-up) 역할을 합니다.\n// 여기서 Leaflet 지도의 인스턴스를 파기하고 이벤트 리스너를 제거합니다.\nreturn()=>{map.remove();};},[]);// 두 번째 매개변수로 빈 배열을 전달하여 컴포넌트가 처음으로 렌더링될 때만 실행되도록 합니다.\nreturn/*#__PURE__*/_jsx(\"div\",{id:\"map\",style:{flex:1}});};export default Map;","map":{"version":3,"names":["React","useEffect","L","jsx","_jsx","Map","map","tileLayer","attribution","addTo","customIcon","icon","iconUrl","iconSize","iconAnchor","popupAnchor","setView","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","marker","bindPopup","openPopup","console","log","remove","id","style","flex"],"sources":["/Users/p_kxn_g/Documents/GitHub/wheresMySeoul/frontend/awes/src/Map.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\n\nconst Map = () => {\n  useEffect(() => {\n    // Leaflet 지도를 생성하고 설정합니다.\n    const map = L.map('map');\n\n    // OpenStreetMap 타일 레이어를 추가합니다.\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n    }).addTo(map);\n\n    // 사용자 정의 마커 아이콘 설정\n    const customIcon = L.icon({\n      iconUrl: '/png/marker_icon.png', // 마커 아이콘 이미지 URL\n      iconSize: [41, 41], // 마커 아이콘 크기\n      iconAnchor: [12, 41], // 마커 아이콘 위치 조절\n      popupAnchor: [1, -34] // 팝업 위치 조절\n    });\n\n    // Leaflet 맵의 중앙을 서울로 설정합니다.\n    map.setView([37.5665, 126.9780], 13);\n\n    // 현재 위치를 가져와서 지도에 마커로 표시합니다.\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const { latitude, longitude } = position.coords;\n\n        // Leaflet 맵의 중앙을 현재 위치로 설정합니다.\n        map.setView([latitude, longitude], 13);\n\n        // 현재 위치에 마커 추가\n        L.marker([latitude, longitude], { icon: customIcon }).addTo(map)\n          .bindPopup(\"현재 위치\")\n          .openPopup();\n      });\n    } else {\n      console.log(\"Geolocation is not supported by this browser.\");\n    }\n\n    // useEffect에서 반환된 함수는 컴포넌트가 언마운트될 때 정리(clean-up) 역할을 합니다.\n    // 여기서 Leaflet 지도의 인스턴스를 파기하고 이벤트 리스너를 제거합니다.\n    return () => {\n      map.remove();\n    };\n  }, []); // 두 번째 매개변수로 빈 배열을 전달하여 컴포넌트가 처음으로 렌더링될 때만 실행되도록 합니다.\n\n  return (\n    <div id=\"map\" style={{ flex:1 }}></div>\n  );\n};\n\nexport default Map;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,MAAO,0BAA0B,CACjC,MAAO,CAAAC,CAAC,KAAM,SAAS,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAExB,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChBJ,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAK,GAAG,CAAGJ,CAAC,CAACI,GAAG,CAAC,KAAK,CAAC,CAExB;AACAJ,CAAC,CAACK,SAAS,CAAC,oDAAoD,CAAE,CAChEC,WAAW,CAAE,yFACf,CAAC,CAAC,CAACC,KAAK,CAACH,GAAG,CAAC,CAEb;AACA,KAAM,CAAAI,UAAU,CAAGR,CAAC,CAACS,IAAI,CAAC,CACxBC,OAAO,CAAE,sBAAsB,CAAE;AACjCC,QAAQ,CAAE,CAAC,EAAE,CAAE,EAAE,CAAC,CAAE;AACpBC,UAAU,CAAE,CAAC,EAAE,CAAE,EAAE,CAAC,CAAE;AACtBC,WAAW,CAAE,CAAC,CAAC,CAAE,CAAC,EAAE,CAAE;AACxB,CAAC,CAAC,CAEF;AACAT,GAAG,CAACU,OAAO,CAAC,CAAC,OAAO,CAAE,QAAQ,CAAC,CAAE,EAAE,CAAC,CAEpC;AACA,GAAI,aAAa,EAAI,CAAAC,SAAS,CAAE,CAC9BA,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAEC,QAAQ,EAAK,CACrD,KAAM,CAAEC,QAAQ,CAAEC,SAAU,CAAC,CAAGF,QAAQ,CAACG,MAAM,CAE/C;AACAjB,GAAG,CAACU,OAAO,CAAC,CAACK,QAAQ,CAAEC,SAAS,CAAC,CAAE,EAAE,CAAC,CAEtC;AACApB,CAAC,CAACsB,MAAM,CAAC,CAACH,QAAQ,CAAEC,SAAS,CAAC,CAAE,CAAEX,IAAI,CAAED,UAAW,CAAC,CAAC,CAACD,KAAK,CAACH,GAAG,CAAC,CAC7DmB,SAAS,CAAC,OAAO,CAAC,CAClBC,SAAS,CAAC,CAAC,CAChB,CAAC,CAAC,CACJ,CAAC,IAAM,CACLC,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC,CAC9D,CAEA;AACA;AACA,MAAO,IAAM,CACXtB,GAAG,CAACuB,MAAM,CAAC,CAAC,CACd,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAAE;AAER,mBACEzB,IAAA,QAAK0B,EAAE,CAAC,KAAK,CAACC,KAAK,CAAE,CAAEC,IAAI,CAAC,CAAE,CAAE,CAAM,CAAC,CAE3C,CAAC,CAED,cAAe,CAAA3B,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}