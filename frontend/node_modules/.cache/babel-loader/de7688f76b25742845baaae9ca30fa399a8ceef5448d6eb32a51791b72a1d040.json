{"ast":null,"code":"var _jsxFileName = \"/Users/p_kxn_g/Documents/GitHub/wheresMySeoul/frontend/awes/src/TextField.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"./Home.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TextField() {\n  _s();\n  const inputStyle = {\n    color: \"black\",\n    border: \"0px solid gray\",\n    borderRadius: \"5px\",\n    width: \"100%\",\n    height: \"40px\",\n    margin: \"0px 10px\",\n    outline: \"none\"\n  };\n  const textFieldStyle = {\n    flex: 1,\n    fontSize: \"20px\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  };\n  const [inputValue, setInputValue] = useState('');\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        const coords = `${longitude},${latitude}`;\n        const sourcecrs = 'epsg:4326';\n        const orders = 'legalcode';\n        const output = 'json';\n        const url = `https://naveropenapi.apigw.ntruss.com/map-reversegeocode/v2/gc?coords=${coords}&sourcecrs=${sourcecrs}&orders=${orders}&output=${output}`;\n        fetch(url, {\n          method: 'GET',\n          headers: {\n            \"X-NCP-APIGW-API-KEY-ID\": \"dkm9ev299n\",\n            \"X-NCP-APIGW-API-KEY\": \"z4DMSTZAXQklZ01rDJmciuAhEiXTRmnEypVCDi3L\"\n          }\n        }).then(response => response.text()).then(data => {\n          console.log(data);\n          // 여기에 응답 데이터를 처리하는 로직을 추가합니다.\n          if (data.results && data.results.length > 0) {\n            // 주소 결과를 입력 값으로 설정\n            setInputValue(data.results[0].region.area1.name + \" \" + data.results[0].region.area2.name + \" \" + data.results[0].region.area3.name);\n          } else {\n            setInputValue(\"주소를 찾을 수 없습니다.\");\n          }\n        }).catch(error => {\n          console.log('Error during geocoding:', error);\n          setInputValue(\"Geocoding error.\");\n        });\n      }, error => {\n        console.log('Geolocation error:', error);\n        setInputValue(\"Location access denied.\");\n      });\n    } else {\n      setInputValue(\"Geolocation not supported.\");\n    }\n  }, []);\n  const handleChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleClear = () => {\n    setInputValue('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: textFieldStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: handleChange,\n      style: inputStyle,\n      placeholder: \"Enter a location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button_none\",\n      onClick: handleClear,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/png/close.png\",\n        alt: \"close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(TextField, \"g3WCsqcvSc9WB7w4du2ucRdqd7Y=\");\n_c = TextField;\nexport default TextField;\nvar _c;\n$RefreshReg$(_c, \"TextField\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TextField","_s","inputStyle","color","border","borderRadius","width","height","margin","outline","textFieldStyle","flex","fontSize","display","flexDirection","alignItems","inputValue","setInputValue","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","sourcecrs","orders","output","url","fetch","method","headers","then","response","text","data","console","log","results","length","region","area1","name","area2","area3","catch","error","handleChange","event","target","value","handleClear","style","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/p_kxn_g/Documents/GitHub/wheresMySeoul/frontend/awes/src/TextField.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"./Home.css\";\n\nfunction TextField() {\n  const inputStyle = {\n    color: \"black\",\n    border: \"0px solid gray\",\n    borderRadius: \"5px\",\n    width: \"100%\",\n    height: \"40px\",\n    margin: \"0px 10px\",\n    outline: \"none\"\n  };\n\n  const textFieldStyle = {\n    flex: 1,\n    fontSize: \"20px\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  };\n\n  const [inputValue, setInputValue] = useState('');\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const { latitude, longitude } = position.coords;\n        const coords = `${longitude},${latitude}`;\n        const sourcecrs = 'epsg:4326';\n        const orders = 'legalcode';\n        const output = 'json';\n        const url = `https://naveropenapi.apigw.ntruss.com/map-reversegeocode/v2/gc?coords=${coords}&sourcecrs=${sourcecrs}&orders=${orders}&output=${output}`;\n        \n        fetch(url, {\n          method: 'GET',\n          headers: {\n            \"X-NCP-APIGW-API-KEY-ID\": \"dkm9ev299n\",\n            \"X-NCP-APIGW-API-KEY\": \"z4DMSTZAXQklZ01rDJmciuAhEiXTRmnEypVCDi3L\"\n          }\n        })\n        .then(response => response.text())\n        .then(data => {\n          console.log(data);\n          // 여기에 응답 데이터를 처리하는 로직을 추가합니다.\n          if (data.results && data.results.length > 0) {\n            // 주소 결과를 입력 값으로 설정\n            setInputValue(data.results[0].region.area1.name + \" \" + \n                          data.results[0].region.area2.name + \" \" + \n                          data.results[0].region.area3.name);\n          } else {\n            setInputValue(\"주소를 찾을 수 없습니다.\");\n          }\n        })\n        .catch(error => {\n          console.log('Error during geocoding:', error);\n          setInputValue(\"Geocoding error.\");\n        });\n      }, (error) => {\n        console.log('Geolocation error:', error);\n        setInputValue(\"Location access denied.\");\n      });\n    } else {\n      setInputValue(\"Geolocation not supported.\");\n    }\n  }, []);\n  \n\n\n  const handleChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleClear = () => {\n    setInputValue('');\n  };\n\n  return (\n    <div style={textFieldStyle}>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleChange}\n        style={inputStyle}\n        placeholder=\"Enter a location\"\n      />\n      <button className=\"button_none\" onClick={handleClear}>\n        <img src=\"/png/close.png\" alt=\"close\" />\n      </button>\n    </div>\n  );\n}\n\nexport default TextField;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}