{"ast":null,"code":"import React,{useState,useEffect}from'react';import\"./Home.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function TextField(){const inputStyle={color:\"black\",border:\"0px solid gray\",borderRadius:\"5px\",width:\"100%\",height:\"40px\",margin:\"0px 10px\",outline:\"none\"};const textFieldStyle={flex:1,fontSize:\"20px\",display:\"flex\",flexDirection:\"row\",alignItems:\"center\"};const[inputValue,setInputValue]=useState('');useEffect(()=>{if(navigator.geolocation){navigator.geolocation.getCurrentPosition(position=>{const{latitude,longitude}=position.coords;const coords=\"\".concat(longitude,\",\").concat(latitude);const sourcecrs='epsg:4326';const orders='legalcode';const output='json';const url=\"/map-reversegeocode/v2/gc?coords=\".concat(coords,\"&sourcecrs=\").concat(sourcecrs,\"&orders=\").concat(orders,\"&output=\").concat(output);fetch(url,{method:'GET',headers:{\"X-NCP-APIGW-API-KEY-ID\":\"dkm9ev299n\",\"X-NCP-APIGW-API-KEY\":\"z4DMSTZAXQklZ01rDJmciuAhEiXTRmnEypVCDi3L\"}}).then(response=>response.text()).then(data=>{console.log(data);// 여기에 응답 데이터를 처리하는 로직을 추가합니다.\nif(data.results&&data.results.length>0){// 주소 결과를 입력 값으로 설정\nsetInputValue(data.results[0].region.area1.name+\" \"+data.results[0].region.area2.name+\" \"+data.results[0].region.area3.name);}else{setInputValue(\"주소를 찾을 수 없습니다.\");}}).catch(error=>{console.log('Error during geocoding:',error);setInputValue(\"Geocoding error.\");});},error=>{console.log('Geolocation error:',error);setInputValue(\"Location access denied.\");});}else{setInputValue(\"Geolocation not supported.\");}},[]);const handleChange=event=>{setInputValue(event.target.value);};const handleClear=()=>{setInputValue('');};return/*#__PURE__*/_jsxs(\"div\",{style:textFieldStyle,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:inputValue,onChange:handleChange,style:inputStyle,placeholder:\"\\uC6D0\\uD558\\uB294 \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"}),/*#__PURE__*/_jsx(\"button\",{className:\"button_none\",onClick:handleClear,children:/*#__PURE__*/_jsx(\"img\",{src:\"/png/close.png\",alt:\"close\"})})]});}export default TextField;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","TextField","inputStyle","color","border","borderRadius","width","height","margin","outline","textFieldStyle","flex","fontSize","display","flexDirection","alignItems","inputValue","setInputValue","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","concat","sourcecrs","orders","output","url","fetch","method","headers","then","response","text","data","console","log","results","length","region","area1","name","area2","area3","catch","error","handleChange","event","target","value","handleClear","style","children","type","onChange","placeholder","className","onClick","src","alt"],"sources":["/Users/p_kxn_g/Documents/GitHub/wheresMySeoul/frontend/awes/src/TextField.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"./Home.css\";\n\nfunction TextField() {\n  const inputStyle = {\n    color: \"black\",\n    border: \"0px solid gray\",\n    borderRadius: \"5px\",\n    width: \"100%\",\n    height: \"40px\",\n    margin: \"0px 10px\",\n    outline: \"none\"\n  };\n\n  const textFieldStyle = {\n    flex: 1,\n    fontSize: \"20px\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  };\n\n  const [inputValue, setInputValue] = useState('');\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const { latitude, longitude } = position.coords;\n        const coords = `${longitude},${latitude}`;\n        const sourcecrs = 'epsg:4326';\n        const orders = 'legalcode';\n        const output = 'json';\n        const url = `/map-reversegeocode/v2/gc?coords=${coords}&sourcecrs=${sourcecrs}&orders=${orders}&output=${output}`;\n        \n        fetch(url, {\n          method: 'GET',\n          headers: {\n            \"X-NCP-APIGW-API-KEY-ID\": \"dkm9ev299n\",\n            \"X-NCP-APIGW-API-KEY\": \"z4DMSTZAXQklZ01rDJmciuAhEiXTRmnEypVCDi3L\"\n          }\n        })\n        .then(response => response.text())\n        .then(data => {\n          console.log(data);\n          // 여기에 응답 데이터를 처리하는 로직을 추가합니다.\n          if (data.results && data.results.length > 0) {\n            // 주소 결과를 입력 값으로 설정\n            setInputValue(data.results[0].region.area1.name + \" \" + \n                          data.results[0].region.area2.name + \" \" + \n                          data.results[0].region.area3.name);\n          } else {\n            setInputValue(\"주소를 찾을 수 없습니다.\");\n          }\n        })\n        .catch(error => {\n          console.log('Error during geocoding:', error);\n          setInputValue(\"Geocoding error.\");\n        });\n      }, (error) => {\n        console.log('Geolocation error:', error);\n        setInputValue(\"Location access denied.\");\n      });\n    } else {\n      setInputValue(\"Geolocation not supported.\");\n    }\n  }, []);\n  \n\n\n  const handleChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleClear = () => {\n    setInputValue('');\n  };\n\n  return (\n    <div style={textFieldStyle}>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleChange}\n        style={inputStyle}\n        placeholder=\"원하는 주소를 입력해주세요\"\n      />\n      <button className=\"button_none\" onClick={handleClear}>\n        <img src=\"/png/close.png\" alt=\"close\" />\n      </button>\n    </div>\n  );\n}\n\nexport default TextField;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}