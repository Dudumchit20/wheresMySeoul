{"ast":null,"code":"var _jsxFileName = \"/Users/p_kxn_g/Documents/GitHub/wheresMySeoul/frontend/awes/src/TextField.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"./Home.css\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TextField() {\n  _s();\n  const inputStyle = {\n    color: \"black\",\n    border: \"0px solid gray\",\n    borderRadius: \"5px\",\n    width: \"100%\",\n    height: \"40px\",\n    margin: \"0px 10px\",\n    outline: \"none\"\n  };\n  const textFieldStyle = {\n    flex: 1,\n    fontSize: \"20px\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  };\n  const [inputValue, setInputValue] = useState('');\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        const coords = `${longitude},${latitude}`;\n        const sourcecrs = 'epsg:4326';\n        const orders = 'legalcode';\n        const output = 'json';\n        const url = `https://naveropenapi.apigw.ntruss.com/map-reversegeocode/v2/gc`;\n        try {\n          const response = await axios.get(url, {\n            params: {\n              coords,\n              sourcecrs,\n              orders,\n              output\n            },\n            headers: {\n              \"X-NCP-APIGW-API-KEY-ID\": \"dkm9ev299n\",\n              \"X-NCP-APIGW-API-KEY\": \"z4DMSTZAXQklZ01rDJmciuAhEiXTRmnEypVCDi3L\"\n            }\n          });\n          const data = response.data;\n          if (data.results && data.results.length > 0) {\n            setInputValue(`${data.results[0].region.area1.name} ${data.results[0].region.area2.name} ${data.results[0].region.area3.name}`);\n          } else {\n            setInputValue(\"주소를 찾을 수 없습니다.\");\n          }\n        } catch (error) {\n          console.error('Error during geocoding:', error);\n          setInputValue(\"Geocoding error.\");\n        }\n      }, error => {\n        console.error('Geolocation error:', error);\n        setInputValue(\"Location access denied.\");\n      });\n    } else {\n      setInputValue(\"Geolocation not supported.\");\n    }\n  }, []);\n  const handleChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleClear = () => {\n    setInputValue('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: textFieldStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: handleChange,\n      style: inputStyle,\n      placeholder: \"\\uC6D0\\uD558\\uB294 \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button_none\",\n      onClick: handleClear,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/png/close.png\",\n        alt: \"close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(TextField, \"g3WCsqcvSc9WB7w4du2ucRdqd7Y=\");\n_c = TextField;\nexport default TextField;\nvar _c;\n$RefreshReg$(_c, \"TextField\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TextField","_s","inputStyle","color","border","borderRadius","width","height","margin","outline","textFieldStyle","flex","fontSize","display","flexDirection","alignItems","inputValue","setInputValue","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","sourcecrs","orders","output","url","response","get","params","headers","data","results","length","region","area1","name","area2","area3","error","console","handleChange","event","target","value","handleClear","style","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/p_kxn_g/Documents/GitHub/wheresMySeoul/frontend/awes/src/TextField.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"./Home.css\";\nimport axios from 'axios';\n\nfunction TextField() {\n  const inputStyle = {\n    color: \"black\",\n    border: \"0px solid gray\",\n    borderRadius: \"5px\",\n    width: \"100%\",\n    height: \"40px\",\n    margin: \"0px 10px\",\n    outline: \"none\"\n  };\n\n  const textFieldStyle = {\n    flex: 1,\n    fontSize: \"20px\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  };\n\n  const [inputValue, setInputValue] = useState('');\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(async (position) => {\n        const { latitude, longitude } = position.coords;\n        const coords = `${longitude},${latitude}`;\n        const sourcecrs = 'epsg:4326';\n        const orders = 'legalcode';\n        const output = 'json';\n        const url = `https://naveropenapi.apigw.ntruss.com/map-reversegeocode/v2/gc`;\n\n        try {\n          const response = await axios.get(url, {\n            params: {\n              coords,\n              sourcecrs,\n              orders,\n              output\n            },\n            headers: {\n              \"X-NCP-APIGW-API-KEY-ID\": \"dkm9ev299n\",\n              \"X-NCP-APIGW-API-KEY\": \"z4DMSTZAXQklZ01rDJmciuAhEiXTRmnEypVCDi3L\"\n            }\n          });\n\n          const data = response.data;\n\n          if (data.results && data.results.length > 0) {\n            setInputValue(\n              `${data.results[0].region.area1.name} ${data.results[0].region.area2.name} ${data.results[0].region.area3.name}`\n            );\n          } else {\n            setInputValue(\"주소를 찾을 수 없습니다.\");\n          }\n        } catch (error) {\n          console.error('Error during geocoding:', error);\n          setInputValue(\"Geocoding error.\");\n        }\n      }, (error) => {\n        console.error('Geolocation error:', error);\n        setInputValue(\"Location access denied.\");\n      });\n    } else {\n      setInputValue(\"Geolocation not supported.\");\n    }\n  }, []);\n\n  \n\n\n  const handleChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleClear = () => {\n    setInputValue('');\n  };\n\n  return (\n    <div style={textFieldStyle}>\n      <input\n        type=\"text\"\n        value={inputValue}\n        onChange={handleChange}\n        style={inputStyle}\n        placeholder=\"원하는 주소를 입력해주세요\"\n      />\n      <button className=\"button_none\" onClick={handleClear}>\n        <img src=\"/png/close.png\" alt=\"close\" />\n      </button>\n    </div>\n  );\n}\n\nexport default TextField;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}