{"ast":null,"code":"var _jsxFileName = \"/Users/p_kxn_g/Documents/GitHub/wheresMySeoul/frontend/awes/src/search/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, InfoWindow, MarkerF, Marker } from '@react-google-maps/api';\nimport \"./Map.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '100%'\n};\n\n// 서울의 초기 위치\nconst defaultCenter = {\n  lat: 37.5665,\n  lng: 126.9780\n};\n// 각 마커 유형에 따른 아이콘 색상 정의\nconst markerIcons = {\n  \"자연\": \"http://maps.google.com/mapfiles/ms/icons/green-dot.png\",\n  \"쇼핑\": \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\",\n  \"명소\": \"http://maps.google.com/mapfiles/ms/icons/pink-dot.png\",\n  \"음식\": \"http://maps.google.com/mapfiles/ms/icons/orange-dot.png\",\n  \"관광거리\": \"http://maps.google.com/mapfiles/ms/icons/purple-dot.png\",\n  \"외국인\": \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\",\n  \"문화\": \"http://maps.google.com/mapfiles/ms/icons/yellow-dot.png\"\n};\nconst mockData = [\n// 자연\n{\n  type: \"자연\",\n  name: \"한강공원\",\n  contentUrl: \"http://example.com/hanriverpark\",\n  address: \"서울특별시 영등포구 여의동로 330\",\n  newAddress: \"서울특별시 영등포구 여의도동 84-7\",\n  phoneNumber: \"번호없음\",\n  website: \"웹사이트없음\",\n  lat: 37.5280,\n  lng: 126.9326\n},\n// 쇼핑\n{\n  type: \"쇼핑\",\n  name: \"명동 쇼핑거리\",\n  contentUrl: \"http://example.com/myeongdongshopping\",\n  address: \"서울특별시 중구 명동길 16\",\n  newAddress: \"서울특별시 중구 명동1가 33-1\",\n  phoneNumber: \"02-1234-5678\",\n  website: \"http://myeongdong.com\",\n  lat: 37.5600,\n  lng: 126.9856\n},\n// 명소\n{\n  type: \"명소\",\n  name: \"남산타워\",\n  contentUrl: \"http://example.com/nseoultower\",\n  address: \"서울특별시 용산구 남산공원길 105\",\n  newAddress: \"서울특별시 용산구 남산동2가 산1-3\",\n  phoneNumber: \"02-1234-5679\",\n  website: \"http://nseoultower.com\",\n  lat: 37.5512,\n  lng: 126.9882\n},\n// 음식\n{\n  type: \"음식\",\n  name: \"광장시장\",\n  contentUrl: \"http://example.com/gwangjangmarket\",\n  address: \"서울특별시 종로구 창경궁로 88\",\n  newAddress: \"서울특별시 종로구 예지동 88\",\n  phoneNumber: \"02-1234-5680\",\n  website: \"http://gwangjangmarket.com\",\n  lat: 37.5700,\n  lng: 126.9995\n},\n// 관광 거리\n{\n  type: \"관광거리\",\n  name: \"인사동길\",\n  contentUrl: \"http://example.com/insadongstreet\",\n  address: \"서울특별시 종로구 인사동길 62\",\n  newAddress: \"서울특별시 종로구 인사동 194-2\",\n  phoneNumber: \"번호없음\",\n  website: \"http://insadongstreet.com\",\n  lat: 37.5711,\n  lng: 126.9858\n},\n// 외국인\n{\n  type: \"외국인\",\n  name: \"이태원 관광특구\",\n  contentUrl: \"http://example.com/itaewontourism\",\n  address: \"서울특별시 용산구 이태원로 170\",\n  newAddress: \"서울특별시 용산구 이태원동 34-21\",\n  phoneNumber: \"02-1234-5681\",\n  website: \"http://itaewontourism.com\",\n  lat: 37.5345,\n  lng: 126.9946\n},\n// 외국인\n{\n  type: \"문화\",\n  name: \"이태원 관광특구\",\n  contentUrl: \"http://example.com/itaewontourism\",\n  address: \"서울특별시 용산구 이태원로 170\",\n  newAddress: \"서울특별시 용산구 이태원동 34-21\",\n  phoneNumber: \"02-1234-5681\",\n  website: \"http://itaewontourism.com\",\n  lat: 37.5345,\n  lng: 126.9846\n}];\nconst Map = ({\n  selectedFilters\n}) => {\n  _s();\n  const [currentPosition, setCurrentPosition] = useState(defaultCenter);\n  const [allMarkers, setAllMarkers] = useState([]); // API에서 불러온 모든 마커 데이터 저장\n  const [markers, setMarkers] = useState([]);\n  const [activeMarker, setActiveMarker] = useState(null);\n  useEffect(() => {\n    // 현재 위치를 설정\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setCurrentPosition({\n          lat: latitude,\n          lng: longitude\n        });\n        console.log(\"Current Position:\", latitude, longitude); // 현재 위치 로그 출력\n      }, () => {\n        console.error(\"Geolocation is not supported or permission denied.\");\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n    }\n  }, []);\n  // 각 카테고리별로 데이터를 불러오는 함수\n  const fetchData = async category => {\n    try {\n      const response = await fetch(`http://3.39.223.21:8080/searchOneCategory?address=중구&category=${category}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      return {\n        [category]: data\n      };\n    } catch (error) {\n      console.error(`Failed to fetch data for category ${category}:`, error);\n      return {\n        [category]: []\n      }; // 에러가 발생했을 경우 빈 배열 반환\n    }\n  };\n\n  // 처음 마운트될 때 모든 카테고리에 대한 데이터를 불러옴\n  useEffect(() => {\n    const filtersNames = ['관광거리', '명소', '문화', '쇼핑', '자연', '음식', '외국인'];\n    const fetchAllData = async () => {\n      const promises = filtersNames.map(category => fetchData(category)); // 모든 카테고리에 대해 fetchData 호출\n      const results = await Promise.all(promises); // 모든 프로미스가 완료될 때까지 기다림\n      const allData = results.reduce((acc, curr) => ({\n        ...acc,\n        ...curr\n      }), {}); // 결과를 딕셔너리로 합침\n      setAllMarkers(allData); // allMarkers 상태를 업데이트\n    };\n    fetchAllData();\n  }, []);\n\n  // selectedFilters가 변경될 때마다 필터링 수행\n  useEffect(() => {\n    const filteredData = Object.keys(allMarkers).filter(key => selectedFilters.includes(key)) // 선택된 필터에 해당하는 키만 필터링\n    .flatMap(key => allMarkers[key]); // 해당 키의 데이터를 합침\n    setFilteredMarkers(filteredData);\n  }, [selectedFilters, allMarkers]);\n\n  // 마커 클릭 시 InfoWindow를 활성화하는 함수\n  const handleMarkerClick = marker => {\n    setActiveMarker(marker);\n  };\n\n  // InfoWindow 닫기\n  const handleInfoWindowClose = () => {\n    setActiveMarker(null);\n  };\n  const getPixelPositionOffset = (width, height) => ({\n    x: -(width / 2),\n    y: -(height + 20) // Adjust y position based on your need\n  });\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: currentPosition,\n    zoom: 13,\n    children: [/*#__PURE__*/_jsxDEV(MarkerF, {\n      position: currentPosition,\n      title: \"\\uD604\\uC7AC \\uC704\\uCE58\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this), markers.map((marker, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: marker.lat,\n          lng: marker.lng\n        },\n        icon: markerIcons[marker.type] || \"http://maps.google.com/mapfiles/ms/icons/yellow-dot.png\" // 기본 마커 색상\n        ,\n        title: marker.name,\n        onClick: () => handleMarkerClick(marker)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 13\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }, this)), activeMarker && /*#__PURE__*/_jsxDEV(InfoWindow, {\n      position: {\n        lat: activeMarker.lat,\n        lng: activeMarker.lng\n      },\n      onCloseClick: handleInfoWindowClose,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: activeMarker.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC8FC\\uC18C: \", activeMarker.address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC804\\uD654\\uBC88\\uD638: \", activeMarker.phoneNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC6F9\\uC0AC\\uC774\\uD2B8: \", activeMarker.website]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 188,\n    columnNumber: 7\n  }, this);\n};\n_s(Map, \"iF87V7TMNkVNDLphM223HTVMFik=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","InfoWindow","MarkerF","Marker","jsxDEV","_jsxDEV","containerStyle","width","height","defaultCenter","lat","lng","markerIcons","mockData","type","name","contentUrl","address","newAddress","phoneNumber","website","Map","selectedFilters","_s","currentPosition","setCurrentPosition","allMarkers","setAllMarkers","markers","setMarkers","activeMarker","setActiveMarker","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","console","log","error","fetchData","category","response","fetch","ok","Error","status","data","json","filtersNames","fetchAllData","promises","map","results","Promise","all","allData","reduce","acc","curr","filteredData","Object","keys","filter","key","includes","flatMap","setFilteredMarkers","handleMarkerClick","marker","handleInfoWindowClose","getPixelPositionOffset","x","y","mapContainerStyle","center","zoom","children","title","fileName","_jsxFileName","lineNumber","columnNumber","index","icon","onClick","onCloseClick","_c","$RefreshReg$"],"sources":["/Users/p_kxn_g/Documents/GitHub/wheresMySeoul/frontend/awes/src/search/Map.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { GoogleMap, InfoWindow, MarkerF, Marker} from '@react-google-maps/api';\nimport \"./Map.css\";\nconst containerStyle = {\n  width: '100%',\n  height: '100%'\n};\n\n// 서울의 초기 위치\nconst defaultCenter = {\n  lat: 37.5665,\n  lng: 126.9780\n};\n// 각 마커 유형에 따른 아이콘 색상 정의\nconst markerIcons = {\n  \"자연\": \"http://maps.google.com/mapfiles/ms/icons/green-dot.png\",\n  \"쇼핑\": \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\",\n  \"명소\": \"http://maps.google.com/mapfiles/ms/icons/pink-dot.png\",\n  \"음식\": \"http://maps.google.com/mapfiles/ms/icons/orange-dot.png\",\n  \"관광거리\": \"http://maps.google.com/mapfiles/ms/icons/purple-dot.png\",\n  \"외국인\": \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\",\n  \"문화\": \"http://maps.google.com/mapfiles/ms/icons/yellow-dot.png\"\n};\nconst mockData = [\n  // 자연\n  {\n    type: \"자연\",\n    name: \"한강공원\",\n    contentUrl: \"http://example.com/hanriverpark\",\n    address: \"서울특별시 영등포구 여의동로 330\",\n    newAddress: \"서울특별시 영등포구 여의도동 84-7\",\n    phoneNumber: \"번호없음\",\n    website: \"웹사이트없음\",\n    lat: 37.5280,\n    lng: 126.9326\n  },\n  // 쇼핑\n  {\n    type: \"쇼핑\",\n    name: \"명동 쇼핑거리\",\n    contentUrl: \"http://example.com/myeongdongshopping\",\n    address: \"서울특별시 중구 명동길 16\",\n    newAddress: \"서울특별시 중구 명동1가 33-1\",\n    phoneNumber: \"02-1234-5678\",\n    website: \"http://myeongdong.com\",\n    lat: 37.5600,\n    lng: 126.9856\n  },\n  // 명소\n  {\n    type: \"명소\",\n    name: \"남산타워\",\n    contentUrl: \"http://example.com/nseoultower\",\n    address: \"서울특별시 용산구 남산공원길 105\",\n    newAddress: \"서울특별시 용산구 남산동2가 산1-3\",\n    phoneNumber: \"02-1234-5679\",\n    website: \"http://nseoultower.com\",\n    lat: 37.5512,\n    lng: 126.9882\n  },\n  // 음식\n  {\n    type: \"음식\",\n    name: \"광장시장\",\n    contentUrl: \"http://example.com/gwangjangmarket\",\n    address: \"서울특별시 종로구 창경궁로 88\",\n    newAddress: \"서울특별시 종로구 예지동 88\",\n    phoneNumber: \"02-1234-5680\",\n    website: \"http://gwangjangmarket.com\",\n    lat: 37.5700,\n    lng: 126.9995\n  },\n  // 관광 거리\n  {\n    type: \"관광거리\",\n    name: \"인사동길\",\n    contentUrl: \"http://example.com/insadongstreet\",\n    address: \"서울특별시 종로구 인사동길 62\",\n    newAddress: \"서울특별시 종로구 인사동 194-2\",\n    phoneNumber: \"번호없음\",\n    website: \"http://insadongstreet.com\",\n    lat: 37.5711,\n    lng: 126.9858\n  },\n  // 외국인\n  {\n    type: \"외국인\",\n    name: \"이태원 관광특구\",\n    contentUrl: \"http://example.com/itaewontourism\",\n    address: \"서울특별시 용산구 이태원로 170\",\n    newAddress: \"서울특별시 용산구 이태원동 34-21\",\n    phoneNumber: \"02-1234-5681\",\n    website: \"http://itaewontourism.com\",\n    lat: 37.5345,\n    lng: 126.9946\n  }\n  ,\n    // 외국인\n    {\n      type: \"문화\",\n      name: \"이태원 관광특구\",\n      contentUrl: \"http://example.com/itaewontourism\",\n      address: \"서울특별시 용산구 이태원로 170\",\n      newAddress: \"서울특별시 용산구 이태원동 34-21\",\n      phoneNumber: \"02-1234-5681\",\n      website: \"http://itaewontourism.com\",\n      lat: 37.5345,\n      lng: 126.9846\n    }\n];\n\nconst Map = ({ selectedFilters }) => {\n  const [currentPosition, setCurrentPosition] = useState(defaultCenter);\n  const [allMarkers, setAllMarkers] = useState([]); // API에서 불러온 모든 마커 데이터 저장\n  const [markers, setMarkers] = useState([]);\n  const [activeMarker, setActiveMarker] = useState(null);\n\n  useEffect(() => {\n    // 현재 위치를 설정\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const { latitude, longitude } = position.coords;\n        setCurrentPosition({\n          lat: latitude,\n          lng: longitude\n        });\n        console.log(\"Current Position:\", latitude, longitude);  // 현재 위치 로그 출력\n      }, () => {\n        console.error(\"Geolocation is not supported or permission denied.\");\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n    }\n  }, []);\n    // 각 카테고리별로 데이터를 불러오는 함수\n    const fetchData = async (category) => {\n      try {\n        const response = await fetch(`http://3.39.223.21:8080/searchOneCategory?address=중구&category=${category}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        return { [category]: data };\n      } catch (error) {\n        console.error(`Failed to fetch data for category ${category}:`, error);\n        return { [category]: [] }; // 에러가 발생했을 경우 빈 배열 반환\n      }\n    };\n  \n    // 처음 마운트될 때 모든 카테고리에 대한 데이터를 불러옴\n    useEffect(() => {\n      const filtersNames = ['관광거리', '명소', '문화', '쇼핑', '자연', '음식', '외국인'];\n      const fetchAllData = async () => {\n        const promises = filtersNames.map(category => fetchData(category)); // 모든 카테고리에 대해 fetchData 호출\n        const results = await Promise.all(promises); // 모든 프로미스가 완료될 때까지 기다림\n        const allData = results.reduce((acc, curr) => ({ ...acc, ...curr }), {}); // 결과를 딕셔너리로 합침\n        setAllMarkers(allData); // allMarkers 상태를 업데이트\n      };\n  \n      fetchAllData();\n    }, []);\n  \n    // selectedFilters가 변경될 때마다 필터링 수행\n    useEffect(() => {\n      const filteredData = Object.keys(allMarkers)\n        .filter(key => selectedFilters.includes(key)) // 선택된 필터에 해당하는 키만 필터링\n        .flatMap(key => allMarkers[key]); // 해당 키의 데이터를 합침\n      setFilteredMarkers(filteredData);\n    }, [selectedFilters, allMarkers]);\n  \n\n  // 마커 클릭 시 InfoWindow를 활성화하는 함수\n  const handleMarkerClick = (marker) => {\n    setActiveMarker(marker);\n  };\n\n  // InfoWindow 닫기\n  const handleInfoWindowClose = () => {\n    setActiveMarker(null);\n  };\n\n  const getPixelPositionOffset = (width, height) => ({\n    x: -(width / 2),\n    y: -(height + 20) // Adjust y position based on your need\n  });\n\n  return (\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={currentPosition}\n        zoom={13}\n      >\n        {/* 현재 위치에 마커 표시 */}\n        <MarkerF position={currentPosition} title=\"현재 위치\" />\n    \n        {markers.map((marker, index) => (\n          <div key={index}>\n            <Marker\n              position={{ lat: marker.lat, lng: marker.lng }}\n              icon={markerIcons[marker.type] || \"http://maps.google.com/mapfiles/ms/icons/yellow-dot.png\"} // 기본 마커 색상\n              title={marker.name}\n              onClick={() => handleMarkerClick(marker)}\n            />\n          </div>\n        ))}\n        {/* 활성화된 마커에 정보창 표시 */}\n        {activeMarker && (\n          <InfoWindow\n            position={{ lat: activeMarker.lat, lng: activeMarker.lng }}\n            onCloseClick={handleInfoWindowClose}\n          >\n            <div>\n              <h4>{activeMarker.name}</h4>\n              <p>주소: {activeMarker.address}</p>\n              <p>전화번호: {activeMarker.phoneNumber}</p>\n              <p>웹사이트: {activeMarker.website}</p>\n            </div>\n          </InfoWindow>\n        )}\n      </GoogleMap>\n  );\n};\n\nexport default Map;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,UAAU,EAAEC,OAAO,EAAEC,MAAM,QAAO,wBAAwB;AAC9E,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnB,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,MAAM;EACbC,MAAM,EAAE;AACV,CAAC;;AAED;AACA,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,OAAO;EACZC,GAAG,EAAE;AACP,CAAC;AACD;AACA,MAAMC,WAAW,GAAG;EAClB,IAAI,EAAE,wDAAwD;EAC9D,IAAI,EAAE,uDAAuD;EAC7D,IAAI,EAAE,uDAAuD;EAC7D,IAAI,EAAE,yDAAyD;EAC/D,MAAM,EAAE,yDAAyD;EACjE,KAAK,EAAE,sDAAsD;EAC7D,IAAI,EAAE;AACR,CAAC;AACD,MAAMC,QAAQ,GAAG;AACf;AACA;EACEC,IAAI,EAAE,IAAI;EACVC,IAAI,EAAE,MAAM;EACZC,UAAU,EAAE,iCAAiC;EAC7CC,OAAO,EAAE,qBAAqB;EAC9BC,UAAU,EAAE,sBAAsB;EAClCC,WAAW,EAAE,MAAM;EACnBC,OAAO,EAAE,QAAQ;EACjBV,GAAG,EAAE,OAAO;EACZC,GAAG,EAAE;AACP,CAAC;AACD;AACA;EACEG,IAAI,EAAE,IAAI;EACVC,IAAI,EAAE,SAAS;EACfC,UAAU,EAAE,uCAAuC;EACnDC,OAAO,EAAE,iBAAiB;EAC1BC,UAAU,EAAE,oBAAoB;EAChCC,WAAW,EAAE,cAAc;EAC3BC,OAAO,EAAE,uBAAuB;EAChCV,GAAG,EAAE,OAAO;EACZC,GAAG,EAAE;AACP,CAAC;AACD;AACA;EACEG,IAAI,EAAE,IAAI;EACVC,IAAI,EAAE,MAAM;EACZC,UAAU,EAAE,gCAAgC;EAC5CC,OAAO,EAAE,qBAAqB;EAC9BC,UAAU,EAAE,sBAAsB;EAClCC,WAAW,EAAE,cAAc;EAC3BC,OAAO,EAAE,wBAAwB;EACjCV,GAAG,EAAE,OAAO;EACZC,GAAG,EAAE;AACP,CAAC;AACD;AACA;EACEG,IAAI,EAAE,IAAI;EACVC,IAAI,EAAE,MAAM;EACZC,UAAU,EAAE,oCAAoC;EAChDC,OAAO,EAAE,mBAAmB;EAC5BC,UAAU,EAAE,kBAAkB;EAC9BC,WAAW,EAAE,cAAc;EAC3BC,OAAO,EAAE,4BAA4B;EACrCV,GAAG,EAAE,OAAO;EACZC,GAAG,EAAE;AACP,CAAC;AACD;AACA;EACEG,IAAI,EAAE,MAAM;EACZC,IAAI,EAAE,MAAM;EACZC,UAAU,EAAE,mCAAmC;EAC/CC,OAAO,EAAE,mBAAmB;EAC5BC,UAAU,EAAE,qBAAqB;EACjCC,WAAW,EAAE,MAAM;EACnBC,OAAO,EAAE,2BAA2B;EACpCV,GAAG,EAAE,OAAO;EACZC,GAAG,EAAE;AACP,CAAC;AACD;AACA;EACEG,IAAI,EAAE,KAAK;EACXC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE,mCAAmC;EAC/CC,OAAO,EAAE,oBAAoB;EAC7BC,UAAU,EAAE,sBAAsB;EAClCC,WAAW,EAAE,cAAc;EAC3BC,OAAO,EAAE,2BAA2B;EACpCV,GAAG,EAAE,OAAO;EACZC,GAAG,EAAE;AACP,CAAC;AAEC;AACA;EACEG,IAAI,EAAE,IAAI;EACVC,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE,mCAAmC;EAC/CC,OAAO,EAAE,oBAAoB;EAC7BC,UAAU,EAAE,sBAAsB;EAClCC,WAAW,EAAE,cAAc;EAC3BC,OAAO,EAAE,2BAA2B;EACpCV,GAAG,EAAE,OAAO;EACZC,GAAG,EAAE;AACP,CAAC,CACJ;AAED,MAAMU,GAAG,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAG1B,QAAQ,CAACU,aAAa,CAAC;EACrE,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClD,MAAM,CAAC6B,OAAO,EAAEC,UAAU,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC+B,YAAY,EAAEC,eAAe,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;EAEtDD,SAAS,CAAC,MAAM;IACd;IACA,IAAI,aAAa,IAAIkC,SAAS,EAAE;MAC9BA,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAEC,QAAQ,IAAK;QACrD,MAAM;UAAEC,QAAQ;UAAEC;QAAU,CAAC,GAAGF,QAAQ,CAACG,MAAM;QAC/Cb,kBAAkB,CAAC;UACjBf,GAAG,EAAE0B,QAAQ;UACbzB,GAAG,EAAE0B;QACP,CAAC,CAAC;QACFE,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEJ,QAAQ,EAAEC,SAAS,CAAC,CAAC,CAAE;MAC1D,CAAC,EAAE,MAAM;QACPE,OAAO,CAACE,KAAK,CAAC,oDAAoD,CAAC;MACrE,CAAC,CAAC;IACJ,CAAC,MAAM;MACLF,OAAO,CAACE,KAAK,CAAC,+CAA+C,CAAC;IAChE;EACF,CAAC,EAAE,EAAE,CAAC;EACJ;EACA,MAAMC,SAAS,GAAG,MAAOC,QAAQ,IAAK;IACpC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,iEAAgEF,QAAS,EAAC,CAAC;MACzG,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAE,uBAAsBH,QAAQ,CAACI,MAAO,EAAC,CAAC;MAC3D;MACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClC,OAAO;QAAE,CAACP,QAAQ,GAAGM;MAAK,CAAC;IAC7B,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAE,qCAAoCE,QAAS,GAAE,EAAEF,KAAK,CAAC;MACtE,OAAO;QAAE,CAACE,QAAQ,GAAG;MAAG,CAAC,CAAC,CAAC;IAC7B;EACF,CAAC;;EAED;EACA7C,SAAS,CAAC,MAAM;IACd,MAAMqD,YAAY,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC;IAClE,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,QAAQ,GAAGF,YAAY,CAACG,GAAG,CAACX,QAAQ,IAAID,SAAS,CAACC,QAAQ,CAAC,CAAC,CAAC,CAAC;MACpE,MAAMY,OAAO,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC,CAAC,CAAC;MAC7C,MAAMK,OAAO,GAAGH,OAAO,CAACI,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,MAAM;QAAE,GAAGD,GAAG;QAAE,GAAGC;MAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1ElC,aAAa,CAAC+B,OAAO,CAAC,CAAC,CAAC;IAC1B,CAAC;IAEDN,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAtD,SAAS,CAAC,MAAM;IACd,MAAMgE,YAAY,GAAGC,MAAM,CAACC,IAAI,CAACtC,UAAU,CAAC,CACzCuC,MAAM,CAACC,GAAG,IAAI5C,eAAe,CAAC6C,QAAQ,CAACD,GAAG,CAAC,CAAC,CAAC;IAAA,CAC7CE,OAAO,CAACF,GAAG,IAAIxC,UAAU,CAACwC,GAAG,CAAC,CAAC,CAAC,CAAC;IACpCG,kBAAkB,CAACP,YAAY,CAAC;EAClC,CAAC,EAAE,CAACxC,eAAe,EAAEI,UAAU,CAAC,CAAC;;EAGnC;EACA,MAAM4C,iBAAiB,GAAIC,MAAM,IAAK;IACpCxC,eAAe,CAACwC,MAAM,CAAC;EACzB,CAAC;;EAED;EACA,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;IAClCzC,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAM0C,sBAAsB,GAAGA,CAAClE,KAAK,EAAEC,MAAM,MAAM;IACjDkE,CAAC,EAAE,EAAEnE,KAAK,GAAG,CAAC,CAAC;IACfoE,CAAC,EAAE,EAAEnE,MAAM,GAAG,EAAE,CAAC,CAAC;EACpB,CAAC,CAAC;EAEF,oBACIH,OAAA,CAACL,SAAS;IACR4E,iBAAiB,EAAEtE,cAAe;IAClCuE,MAAM,EAAErD,eAAgB;IACxBsD,IAAI,EAAE,EAAG;IAAAC,QAAA,gBAGT1E,OAAA,CAACH,OAAO;MAACiC,QAAQ,EAAEX,eAAgB;MAACwD,KAAK,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEnDxD,OAAO,CAAC0B,GAAG,CAAC,CAACiB,MAAM,EAAEc,KAAK,kBACzBhF,OAAA;MAAA0E,QAAA,eACE1E,OAAA,CAACF,MAAM;QACLgC,QAAQ,EAAE;UAAEzB,GAAG,EAAE6D,MAAM,CAAC7D,GAAG;UAAEC,GAAG,EAAE4D,MAAM,CAAC5D;QAAI,CAAE;QAC/C2E,IAAI,EAAE1E,WAAW,CAAC2D,MAAM,CAACzD,IAAI,CAAC,IAAI,yDAA0D,CAAC;QAAA;QAC7FkE,KAAK,EAAET,MAAM,CAACxD,IAAK;QACnBwE,OAAO,EAAEA,CAAA,KAAMjB,iBAAiB,CAACC,MAAM;MAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C;IAAC,GANMC,KAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOV,CACN,CAAC,EAEDtD,YAAY,iBACXzB,OAAA,CAACJ,UAAU;MACTkC,QAAQ,EAAE;QAAEzB,GAAG,EAAEoB,YAAY,CAACpB,GAAG;QAAEC,GAAG,EAAEmB,YAAY,CAACnB;MAAI,CAAE;MAC3D6E,YAAY,EAAEhB,qBAAsB;MAAAO,QAAA,eAEpC1E,OAAA;QAAA0E,QAAA,gBACE1E,OAAA;UAAA0E,QAAA,EAAKjD,YAAY,CAACf;QAAI;UAAAkE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC5B/E,OAAA;UAAA0E,QAAA,GAAG,gBAAI,EAACjD,YAAY,CAACb,OAAO;QAAA;UAAAgE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjC/E,OAAA;UAAA0E,QAAA,GAAG,4BAAM,EAACjD,YAAY,CAACX,WAAW;QAAA;UAAA8D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACvC/E,OAAA;UAAA0E,QAAA,GAAG,4BAAM,EAACjD,YAAY,CAACV,OAAO;QAAA;UAAA6D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CACb;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAElB,CAAC;AAAC7D,EAAA,CA9GIF,GAAG;AAAAoE,EAAA,GAAHpE,GAAG;AAgHT,eAAeA,GAAG;AAAC,IAAAoE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}