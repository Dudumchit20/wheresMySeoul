{"ast":null,"code":"var _jsxFileName = \"/Users/p_kxn_g/Documents/GitHub/wheresMySeoul/frontend/awes/src/search/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, InfoWindow, MarkerF, Marker } from '@react-google-maps/api';\nimport \"./Map.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '100%'\n};\n\n// 서울의 초기 위치\nconst defaultCenter = {\n  lat: 37.5665,\n  lng: 126.9780\n};\n// 각 마커 유형에 따른 아이콘 색상 정의\nconst markerIcons = {\n  \"자연\": \"http://maps.google.com/mapfiles/ms/icons/green-dot.png\",\n  \"쇼핑\": \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\",\n  \"명소\": \"http://maps.google.com/mapfiles/ms/icons/pink-dot.png\",\n  \"음식\": \"http://maps.google.com/mapfiles/ms/icons/orange-dot.png\",\n  \"관광거리\": \"http://maps.google.com/mapfiles/ms/icons/purple-dot.png\",\n  \"외국인\": \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\",\n  \"문화\": \"http://maps.google.com/mapfiles/ms/icons/yellow-dot.png\"\n};\nconst mockData = [\n// 자연\n{\n  type: \"자연\",\n  name: \"한강공원\",\n  contentUrl: \"http://example.com/hanriverpark\",\n  address: \"서울특별시 영등포구 여의동로 330\",\n  newAddress: \"서울특별시 영등포구 여의도동 84-7\",\n  phoneNumber: \"번호없음\",\n  website: \"웹사이트없음\",\n  lat: 37.5280,\n  lng: 126.9326\n},\n// 쇼핑\n{\n  type: \"쇼핑\",\n  name: \"명동 쇼핑거리\",\n  contentUrl: \"http://example.com/myeongdongshopping\",\n  address: \"서울특별시 중구 명동길 16\",\n  newAddress: \"서울특별시 중구 명동1가 33-1\",\n  phoneNumber: \"02-1234-5678\",\n  website: \"http://myeongdong.com\",\n  lat: 37.5600,\n  lng: 126.9856\n},\n// 명소\n{\n  type: \"명소\",\n  name: \"남산타워\",\n  contentUrl: \"http://example.com/nseoultower\",\n  address: \"서울특별시 용산구 남산공원길 105\",\n  newAddress: \"서울특별시 용산구 남산동2가 산1-3\",\n  phoneNumber: \"02-1234-5679\",\n  website: \"http://nseoultower.com\",\n  lat: 37.5512,\n  lng: 126.9882\n},\n// 음식\n{\n  type: \"음식\",\n  name: \"광장시장\",\n  contentUrl: \"http://example.com/gwangjangmarket\",\n  address: \"서울특별시 종로구 창경궁로 88\",\n  newAddress: \"서울특별시 종로구 예지동 88\",\n  phoneNumber: \"02-1234-5680\",\n  website: \"http://gwangjangmarket.com\",\n  lat: 37.5700,\n  lng: 126.9995\n},\n// 관광 거리\n{\n  type: \"관광거리\",\n  name: \"인사동길\",\n  contentUrl: \"http://example.com/insadongstreet\",\n  address: \"서울특별시 종로구 인사동길 62\",\n  newAddress: \"서울특별시 종로구 인사동 194-2\",\n  phoneNumber: \"번호없음\",\n  website: \"http://insadongstreet.com\",\n  lat: 37.5711,\n  lng: 126.9858\n},\n// 외국인\n{\n  type: \"외국인\",\n  name: \"이태원 관광특구\",\n  contentUrl: \"http://example.com/itaewontourism\",\n  address: \"서울특별시 용산구 이태원로 170\",\n  newAddress: \"서울특별시 용산구 이태원동 34-21\",\n  phoneNumber: \"02-1234-5681\",\n  website: \"http://itaewontourism.com\",\n  lat: 37.5345,\n  lng: 126.9946\n},\n// 외국인\n{\n  type: \"문화\",\n  name: \"이태원 관광특구\",\n  contentUrl: \"http://example.com/itaewontourism\",\n  address: \"서울특별시 용산구 이태원로 170\",\n  newAddress: \"서울특별시 용산구 이태원동 34-21\",\n  phoneNumber: \"02-1234-5681\",\n  website: \"http://itaewontourism.com\",\n  lat: 37.5345,\n  lng: 126.9846\n}];\nconst Map = ({\n  selectedFilters\n}) => {\n  _s();\n  const [currentPosition, setCurrentPosition] = useState(defaultCenter);\n  const [markers, setMarkers] = useState([]);\n  const [activeMarker, setActiveMarker] = useState(null);\n  useEffect(() => {\n    // 현재 위치를 설정\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setCurrentPosition({\n          lat: latitude,\n          lng: longitude\n        });\n        console.log(\"Current Position:\", latitude, longitude); // 현재 위치 로그 출력\n      }, () => {\n        console.error(\"Geolocation is not supported or permission denied.\");\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n    }\n  }, []);\n  useEffect(() => {\n    // 선택된 필터에 해당하는 목업 데이터를 마커로 설정\n    const filteredMarkers = mockData.filter(item => selectedFilters.includes(item.type));\n    setMarkers(filteredMarkers);\n  }, [selectedFilters]);\n\n  // 마커 클릭 시 InfoWindow를 활성화하는 함수\n  const handleMarkerClick = marker => {\n    setActiveMarker(marker);\n  };\n\n  // InfoWindow 닫기\n  const handleInfoWindowClose = () => {\n    setActiveMarker(null);\n  };\n  const getPixelPositionOffset = (width, height) => ({\n    x: -(width / 2),\n    y: -(height + 20) // Adjust y position based on your need\n  });\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyCoBqm6ZJlc2QRPAEZ8Op36nAklnfj5DsE \",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: currentPosition,\n      zoom: 13,\n      children: [/*#__PURE__*/_jsxDEV(MarkerF, {\n        position: currentPosition,\n        title: \"\\uD604\\uC7AC \\uC704\\uCE58\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), markers.map((marker, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: marker.lat,\n            lng: marker.lng\n          },\n          icon: markerIcons[marker.type] || \"http://maps.google.com/mapfiles/ms/icons/yellow-dot.png\" // 기본 마커 색상\n          ,\n          title: marker.name,\n          onClick: () => handleMarkerClick(marker)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 11\n      }, this)), activeMarker && /*#__PURE__*/_jsxDEV(InfoWindow, {\n        position: {\n          lat: activeMarker.lat,\n          lng: activeMarker.lng\n        },\n        onCloseClick: handleInfoWindowClose,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: activeMarker.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uC8FC\\uC18C: \", activeMarker.address]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uC804\\uD654\\uBC88\\uD638: \", activeMarker.phoneNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"\\uC6F9\\uC0AC\\uC774\\uD2B8: \", activeMarker.website]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"X1GV4It+PRkFNIAvSLK8RD4WKJc=\");\n_c = Map;\nexport default Map;\n//   // 선택된 필터에 따라 API 호출 및 마커 설정\n//   useEffect(() => {\n//     if (selectedFilters.length === 0) {\n//       setMarkers([]); // 필터가 선택되지 않으면 마커 초기화\n//       return;\n//     }\n\n//     const fetchMarkers = async () => {\n//       const allMarkers = [];\n//       for (const filter of selectedFilters) {\n//         console.log(filter)\n//         const response = await fetch(`http://54.172.167.243:8080/searchOneCategory?address=중구&category=${filter}`);\n//         const data = await response.json();\n//         console.log(data)\n//         const newMarkers = data.map(item => ({\n//           lat: item.latitude,\n//           lng: item.longitude,\n//           name: item.name\n//         }));\n//         allMarkers.push(...newMarkers);\n//       }\n//       setMarkers(allMarkers);\n//     };\n\n//     fetchMarkers();\n//   }, [selectedFilters]);\n\n//   return (\n//     <LoadScript googleMapsApiKey=\"AIzaSyCoBqm6ZJlc2QRPAEZ8Op36nAklnfj5DsE\">\n//       <GoogleMap\n//         mapContainerStyle={containerStyle}\n//         center={currentPosition}\n//         zoom={13}\n//       >\n//         {/* 현재 위치 마커 */}\n//         <Marker position={currentPosition} title=\"현재 위치\" />\n\n//         {/* 응답 데이터 마커 */}\n//         {markers.map((marker, index) => (\n//           <Marker\n//             key={index}\n//             position={{ lat: marker.lat, lng: marker.lng }}\n//             title={marker.name}\n//           />\n//         ))}\n//       </GoogleMap>\n//     </LoadScript>\n//   );\n// };\n\n// export default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","LoadScript","InfoWindow","MarkerF","Marker","jsxDEV","_jsxDEV","containerStyle","width","height","defaultCenter","lat","lng","markerIcons","mockData","type","name","contentUrl","address","newAddress","phoneNumber","website","Map","selectedFilters","_s","currentPosition","setCurrentPosition","markers","setMarkers","activeMarker","setActiveMarker","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","console","log","error","filteredMarkers","filter","item","includes","handleMarkerClick","marker","handleInfoWindowClose","getPixelPositionOffset","x","y","googleMapsApiKey","children","mapContainerStyle","center","zoom","title","fileName","_jsxFileName","lineNumber","columnNumber","map","index","icon","onClick","onCloseClick","_c","$RefreshReg$"],"sources":["/Users/p_kxn_g/Documents/GitHub/wheresMySeoul/frontend/awes/src/search/Map.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, InfoWindow, MarkerF, Marker} from '@react-google-maps/api';\nimport \"./Map.css\";\nconst containerStyle = {\n  width: '100%',\n  height: '100%'\n};\n\n// 서울의 초기 위치\nconst defaultCenter = {\n  lat: 37.5665,\n  lng: 126.9780\n};\n// 각 마커 유형에 따른 아이콘 색상 정의\nconst markerIcons = {\n  \"자연\": \"http://maps.google.com/mapfiles/ms/icons/green-dot.png\",\n  \"쇼핑\": \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\",\n  \"명소\": \"http://maps.google.com/mapfiles/ms/icons/pink-dot.png\",\n  \"음식\": \"http://maps.google.com/mapfiles/ms/icons/orange-dot.png\",\n  \"관광거리\": \"http://maps.google.com/mapfiles/ms/icons/purple-dot.png\",\n  \"외국인\": \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\",\n  \"문화\": \"http://maps.google.com/mapfiles/ms/icons/yellow-dot.png\"\n};\nconst mockData = [\n  // 자연\n  {\n    type: \"자연\",\n    name: \"한강공원\",\n    contentUrl: \"http://example.com/hanriverpark\",\n    address: \"서울특별시 영등포구 여의동로 330\",\n    newAddress: \"서울특별시 영등포구 여의도동 84-7\",\n    phoneNumber: \"번호없음\",\n    website: \"웹사이트없음\",\n    lat: 37.5280,\n    lng: 126.9326\n  },\n  // 쇼핑\n  {\n    type: \"쇼핑\",\n    name: \"명동 쇼핑거리\",\n    contentUrl: \"http://example.com/myeongdongshopping\",\n    address: \"서울특별시 중구 명동길 16\",\n    newAddress: \"서울특별시 중구 명동1가 33-1\",\n    phoneNumber: \"02-1234-5678\",\n    website: \"http://myeongdong.com\",\n    lat: 37.5600,\n    lng: 126.9856\n  },\n  // 명소\n  {\n    type: \"명소\",\n    name: \"남산타워\",\n    contentUrl: \"http://example.com/nseoultower\",\n    address: \"서울특별시 용산구 남산공원길 105\",\n    newAddress: \"서울특별시 용산구 남산동2가 산1-3\",\n    phoneNumber: \"02-1234-5679\",\n    website: \"http://nseoultower.com\",\n    lat: 37.5512,\n    lng: 126.9882\n  },\n  // 음식\n  {\n    type: \"음식\",\n    name: \"광장시장\",\n    contentUrl: \"http://example.com/gwangjangmarket\",\n    address: \"서울특별시 종로구 창경궁로 88\",\n    newAddress: \"서울특별시 종로구 예지동 88\",\n    phoneNumber: \"02-1234-5680\",\n    website: \"http://gwangjangmarket.com\",\n    lat: 37.5700,\n    lng: 126.9995\n  },\n  // 관광 거리\n  {\n    type: \"관광거리\",\n    name: \"인사동길\",\n    contentUrl: \"http://example.com/insadongstreet\",\n    address: \"서울특별시 종로구 인사동길 62\",\n    newAddress: \"서울특별시 종로구 인사동 194-2\",\n    phoneNumber: \"번호없음\",\n    website: \"http://insadongstreet.com\",\n    lat: 37.5711,\n    lng: 126.9858\n  },\n  // 외국인\n  {\n    type: \"외국인\",\n    name: \"이태원 관광특구\",\n    contentUrl: \"http://example.com/itaewontourism\",\n    address: \"서울특별시 용산구 이태원로 170\",\n    newAddress: \"서울특별시 용산구 이태원동 34-21\",\n    phoneNumber: \"02-1234-5681\",\n    website: \"http://itaewontourism.com\",\n    lat: 37.5345,\n    lng: 126.9946\n  }\n  ,\n    // 외국인\n    {\n      type: \"문화\",\n      name: \"이태원 관광특구\",\n      contentUrl: \"http://example.com/itaewontourism\",\n      address: \"서울특별시 용산구 이태원로 170\",\n      newAddress: \"서울특별시 용산구 이태원동 34-21\",\n      phoneNumber: \"02-1234-5681\",\n      website: \"http://itaewontourism.com\",\n      lat: 37.5345,\n      lng: 126.9846\n    }\n];\n\nconst Map = ({ selectedFilters }) => {\n  const [currentPosition, setCurrentPosition] = useState(defaultCenter);\n  const [markers, setMarkers] = useState([]);\n  const [activeMarker, setActiveMarker] = useState(null);\n\n  useEffect(() => {\n    // 현재 위치를 설정\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const { latitude, longitude } = position.coords;\n        setCurrentPosition({\n          lat: latitude,\n          lng: longitude\n        });\n        console.log(\"Current Position:\", latitude, longitude);  // 현재 위치 로그 출력\n      }, () => {\n        console.error(\"Geolocation is not supported or permission denied.\");\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n    }\n  }, []);\n\n  useEffect(() => {\n    // 선택된 필터에 해당하는 목업 데이터를 마커로 설정\n    const filteredMarkers = mockData.filter(item => selectedFilters.includes(item.type));\n    setMarkers(filteredMarkers);\n  }, [selectedFilters]);\n\n  // 마커 클릭 시 InfoWindow를 활성화하는 함수\n  const handleMarkerClick = (marker) => {\n    setActiveMarker(marker);\n  };\n\n  // InfoWindow 닫기\n  const handleInfoWindowClose = () => {\n    setActiveMarker(null);\n  };\n\n  const getPixelPositionOffset = (width, height) => ({\n    x: -(width / 2),\n    y: -(height + 20) // Adjust y position based on your need\n  });\n\n  return (\n    <LoadScript googleMapsApiKey=\"AIzaSyCoBqm6ZJlc2QRPAEZ8Op36nAklnfj5DsE\n    \">\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={currentPosition}\n        zoom={13}\n      >\n        {/* 현재 위치에 마커 표시 */}\n        <MarkerF position={currentPosition} title=\"현재 위치\" />\n    \n        {markers.map((marker, index) => (\n          <div key={index}>\n            <Marker\n              position={{ lat: marker.lat, lng: marker.lng }}\n              icon={markerIcons[marker.type] || \"http://maps.google.com/mapfiles/ms/icons/yellow-dot.png\"} // 기본 마커 색상\n              title={marker.name}\n              onClick={() => handleMarkerClick(marker)}\n            />\n          </div>\n        ))}\n        {/* 활성화된 마커에 정보창 표시 */}\n        {activeMarker && (\n          <InfoWindow\n            position={{ lat: activeMarker.lat, lng: activeMarker.lng }}\n            onCloseClick={handleInfoWindowClose}\n          >\n            <div>\n              <h4>{activeMarker.name}</h4>\n              <p>주소: {activeMarker.address}</p>\n              <p>전화번호: {activeMarker.phoneNumber}</p>\n              <p>웹사이트: {activeMarker.website}</p>\n            </div>\n          </InfoWindow>\n        )}\n      </GoogleMap>\n    </LoadScript>\n  );\n};\n\nexport default Map;\n//   // 선택된 필터에 따라 API 호출 및 마커 설정\n//   useEffect(() => {\n//     if (selectedFilters.length === 0) {\n//       setMarkers([]); // 필터가 선택되지 않으면 마커 초기화\n//       return;\n//     }\n\n//     const fetchMarkers = async () => {\n//       const allMarkers = [];\n//       for (const filter of selectedFilters) {\n//         console.log(filter)\n//         const response = await fetch(`http://54.172.167.243:8080/searchOneCategory?address=중구&category=${filter}`);\n//         const data = await response.json();\n//         console.log(data)\n//         const newMarkers = data.map(item => ({\n//           lat: item.latitude,\n//           lng: item.longitude,\n//           name: item.name\n//         }));\n//         allMarkers.push(...newMarkers);\n//       }\n//       setMarkers(allMarkers);\n//     };\n\n//     fetchMarkers();\n//   }, [selectedFilters]);\n\n//   return (\n//     <LoadScript googleMapsApiKey=\"AIzaSyCoBqm6ZJlc2QRPAEZ8Op36nAklnfj5DsE\">\n//       <GoogleMap\n//         mapContainerStyle={containerStyle}\n//         center={currentPosition}\n//         zoom={13}\n//       >\n//         {/* 현재 위치 마커 */}\n//         <Marker position={currentPosition} title=\"현재 위치\" />\n\n//         {/* 응답 데이터 마커 */}\n//         {markers.map((marker, index) => (\n//           <Marker\n//             key={index}\n//             position={{ lat: marker.lat, lng: marker.lng }}\n//             title={marker.name}\n//           />\n//         ))}\n//       </GoogleMap>\n//     </LoadScript>\n//   );\n// };\n\n// export default Map;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}