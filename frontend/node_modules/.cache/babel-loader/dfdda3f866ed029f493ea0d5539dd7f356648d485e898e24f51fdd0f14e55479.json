{"ast":null,"code":"import React,{useState}from'react';import\"../recommend/FilterButtons.css\";import\"../App.css\";import\"../Home.css\";import{useTranslation}from'react-i18next';import i18n from\"../locales/i18n.ts\";import{jsx as _jsx}from\"react/jsx-runtime\";const FilterButtons=()=>{// 현재 선택된 버튼의 인덱스를 추적하는 상태 변수\nconst[selectedButtonIndex,setSelectedButtonIndex]=useState(null);const handleButtonClick=index=>{setSelectedButtonIndex(index);// 선택된 버튼의 인덱스를 업데이트\n// 언어 코드 설정\nlet language='';if(index===0){language='ko';// 한국어\n}else if(index===1){language='en';// 영어\n}else if(index===2){language='ch';// 중국어\n}i18n.changeLanguage(language);// 언어 변경 함수 호출\n};return/*#__PURE__*/_jsx(\"div\",{style:{fontFamily:'NanumBarunGothic'},children:/*#__PURE__*/_jsx(\"div\",{className:\"filters\",children:[\"한국어\",\"English\",\"中國語\"].map((number,index)=>/*#__PURE__*/_jsx(\"button\",{className:selectedButtonIndex===index?\"selected_filter_button\":\"filter_button\",onClick:()=>handleButtonClick(index),children:/*#__PURE__*/_jsx(\"div\",{className:\"font\",children:number})},index))})});};export default FilterButtons;","map":{"version":3,"names":["React","useState","useTranslation","i18n","jsx","_jsx","FilterButtons","selectedButtonIndex","setSelectedButtonIndex","handleButtonClick","index","language","changeLanguage","style","fontFamily","children","className","map","number","onClick"],"sources":["/Users/p_kxn_g/Documents/GitHub/awes0514/src/language/LanSelection.js"],"sourcesContent":["import React, { useState } from 'react';\nimport \"../recommend/FilterButtons.css\";\nimport \"../App.css\";\nimport \"../Home.css\"\nimport { useTranslation } from 'react-i18next';\nimport i18n from \"../locales/i18n.ts\";\n\nconst FilterButtons = () => {\n  // 현재 선택된 버튼의 인덱스를 추적하는 상태 변수\n  const [selectedButtonIndex, setSelectedButtonIndex] = useState(null);\n\n  const handleButtonClick = (index) => {\n    setSelectedButtonIndex(index); // 선택된 버튼의 인덱스를 업데이트\n    \n    // 언어 코드 설정\n    let language = '';\n    if (index === 0) {\n      language = 'ko'; // 한국어\n    } else if (index === 1) {\n      language = 'en'; // 영어\n    } else if (index === 2) {\n      language = 'ch'; // 중국어\n    }\n  \n    i18n.changeLanguage(language);  // 언어 변경 함수 호출\n  };\n  \n  return (\n    <div style={{ fontFamily: 'NanumBarunGothic' }}>\n\n    <div className=\"filters\">\n      {[\"한국어\", \"English\", \"中國語\"].map((number, index) => (\n        <button\n          key={index}\n          className={selectedButtonIndex === index ? \"selected_filter_button\" : \"filter_button\"}\n          onClick={() => handleButtonClick(index)}\n        >\n          <div className='font'>{number}</div>\n        </button>\n      ))}\n    </div>\n    </div>\n  );\n};\n\nexport default FilterButtons;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,gCAAgC,CACvC,MAAO,YAAY,CACnB,MAAO,aAAa,CACpB,OAASC,cAAc,KAAQ,eAAe,CAC9C,MAAO,CAAAC,IAAI,KAAM,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEtC,KAAM,CAAAC,aAAa,CAAGA,CAAA,GAAM,CAC1B;AACA,KAAM,CAACC,mBAAmB,CAAEC,sBAAsB,CAAC,CAAGP,QAAQ,CAAC,IAAI,CAAC,CAEpE,KAAM,CAAAQ,iBAAiB,CAAIC,KAAK,EAAK,CACnCF,sBAAsB,CAACE,KAAK,CAAC,CAAE;AAE/B;AACA,GAAI,CAAAC,QAAQ,CAAG,EAAE,CACjB,GAAID,KAAK,GAAK,CAAC,CAAE,CACfC,QAAQ,CAAG,IAAI,CAAE;AACnB,CAAC,IAAM,IAAID,KAAK,GAAK,CAAC,CAAE,CACtBC,QAAQ,CAAG,IAAI,CAAE;AACnB,CAAC,IAAM,IAAID,KAAK,GAAK,CAAC,CAAE,CACtBC,QAAQ,CAAG,IAAI,CAAE;AACnB,CAEAR,IAAI,CAACS,cAAc,CAACD,QAAQ,CAAC,CAAG;AAClC,CAAC,CAED,mBACEN,IAAA,QAAKQ,KAAK,CAAE,CAAEC,UAAU,CAAE,kBAAmB,CAAE,CAAAC,QAAA,cAE/CV,IAAA,QAAKW,SAAS,CAAC,SAAS,CAAAD,QAAA,CACrB,CAAC,KAAK,CAAE,SAAS,CAAE,KAAK,CAAC,CAACE,GAAG,CAAC,CAACC,MAAM,CAAER,KAAK,gBAC3CL,IAAA,WAEEW,SAAS,CAAET,mBAAmB,GAAKG,KAAK,CAAG,wBAAwB,CAAG,eAAgB,CACtFS,OAAO,CAAEA,CAAA,GAAMV,iBAAiB,CAACC,KAAK,CAAE,CAAAK,QAAA,cAExCV,IAAA,QAAKW,SAAS,CAAC,MAAM,CAAAD,QAAA,CAAEG,MAAM,CAAM,CAAC,EAJ/BR,KAKC,CACT,CAAC,CACC,CAAC,CACD,CAAC,CAEV,CAAC,CAED,cAAe,CAAAJ,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}