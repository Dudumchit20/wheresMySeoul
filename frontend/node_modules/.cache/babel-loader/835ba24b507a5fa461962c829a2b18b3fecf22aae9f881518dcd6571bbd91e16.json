{"ast":null,"code":"var _jsxFileName = \"/Users/p_kxn_g/Documents/GitHub/wheresMySeoul/frontend/awes/src/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '100%'\n};\n\n// 서울의 초기 위치\nconst defaultCenter = {\n  lat: 37.5665,\n  lng: 126.9780\n};\nconst Map = ({\n  selectedFilters\n}) => {\n  _s();\n  const [currentPosition, setCurrentPosition] = useState(defaultCenter);\n  const [markers, setMarkers] = useState([]);\n\n  // 현재 위치 설정\n  useEffect(() => {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setCurrentPosition({\n          lat: latitude,\n          lng: longitude\n        });\n      }, () => {\n        console.error(\"Geolocation is not supported or permission denied.\");\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n    }\n  }, []);\n\n  // 선택된 필터에 따라 API 호출 및 마커 설정\n  useEffect(() => {\n    if (selectedFilters.length === 0) {\n      setMarkers([]); // 필터가 선택되지 않으면 마커 초기화\n      return;\n    }\n    const fetchMarkers = async () => {\n      const allMarkers = [];\n      for (const filter of selectedFilters) {\n        const response = await fetch(`http://54.172.167.243:8080/searchOneCategory?address=서울특별시 중구&category=${filter}`);\n        const data = await response.json();\n        const newMarkers = data.map(item => ({\n          lat: item.latitude,\n          lng: item.longitude,\n          name: item.name\n        }));\n        allMarkers.push(...newMarkers);\n      }\n      setMarkers(allMarkers);\n    };\n    fetchMarkers();\n  }, [selectedFilters]);\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyCoBqm6ZJlc2QRPAEZ8Op36nAklnfj5DsE \",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: currentPosition,\n      zoom: 13,\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        position: currentPosition,\n        title: \"\\uD604\\uC7AC \\uC704\\uCE58\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), markers.map((marker, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: marker.lat,\n          lng: marker.lng\n        },\n        title: marker.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"+i+kGqkHpHSj01putLT8J8lKAq8=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","LoadScript","Marker","jsxDEV","_jsxDEV","containerStyle","width","height","defaultCenter","lat","lng","Map","selectedFilters","_s","currentPosition","setCurrentPosition","markers","setMarkers","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","console","error","length","fetchMarkers","allMarkers","filter","response","fetch","data","json","newMarkers","map","item","name","push","googleMapsApiKey","children","mapContainerStyle","center","zoom","title","fileName","_jsxFileName","lineNumber","columnNumber","marker","index","_c","$RefreshReg$"],"sources":["/Users/p_kxn_g/Documents/GitHub/wheresMySeoul/frontend/awes/src/Map.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\n\nconst containerStyle = {\n  width: '100%',\n  height: '100%'\n};\n\n// 서울의 초기 위치\nconst defaultCenter = {\n  lat: 37.5665,\n  lng: 126.9780\n};\n\nconst Map = ({ selectedFilters }) => {\n  const [currentPosition, setCurrentPosition] = useState(defaultCenter);\n  const [markers, setMarkers] = useState([]);\n\n  // 현재 위치 설정\n  useEffect(() => {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const { latitude, longitude } = position.coords;\n        setCurrentPosition({\n          lat: latitude,\n          lng: longitude\n        });\n      }, () => {\n        console.error(\"Geolocation is not supported or permission denied.\");\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n    }\n  }, []);\n\n  // 선택된 필터에 따라 API 호출 및 마커 설정\n  useEffect(() => {\n    if (selectedFilters.length === 0) {\n      setMarkers([]); // 필터가 선택되지 않으면 마커 초기화\n      return;\n    }\n\n    const fetchMarkers = async () => {\n      const allMarkers = [];\n      for (const filter of selectedFilters) {\n        const response = await fetch(`http://54.172.167.243:8080/searchOneCategory?address=서울특별시 중구&category=${filter}`);\n        const data = await response.json();\n        const newMarkers = data.map(item => ({\n          lat: item.latitude,\n          lng: item.longitude,\n          name: item.name\n        }));\n        allMarkers.push(...newMarkers);\n      }\n      setMarkers(allMarkers);\n    };\n\n    fetchMarkers();\n  }, [selectedFilters]);\n\n  return (\n    <LoadScript googleMapsApiKey=\"AIzaSyCoBqm6ZJlc2QRPAEZ8Op36nAklnfj5DsE\n    \">\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={currentPosition}\n        zoom={13}\n      >\n        {/* 현재 위치 마커 */}\n        <Marker position={currentPosition} title=\"현재 위치\" />\n\n        {/* 응답 데이터 마커 */}\n        {markers.map((marker, index) => (\n          <Marker\n            key={index}\n            position={{ lat: marker.lat, lng: marker.lng }}\n            title={marker.name}\n          />\n        ))}\n      </GoogleMap>\n    </LoadScript>\n  );\n};\n\nexport default Map;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}