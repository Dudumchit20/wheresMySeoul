{"ast":null,"code":"var _jsxFileName = \"/Users/p_kxn_g/Documents/GitHub/awes0514/src/search/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, InfoWindow, Marker, MarkerF } from '@react-google-maps/api';\nimport \"./Map.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '100%'\n};\nconst defaultCenter = {\n  lat: 37.5665,\n  lng: 126.9780\n};\nconst markerIcons = {\n  \"자연\": \"http://maps.google.com/mapfiles/ms/icons/green-dot.png\",\n  \"쇼핑\": \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\",\n  \"명소\": \"http://maps.google.com/mapfiles/ms/icons/pink-dot.png\",\n  \"음식\": \"http://maps.google.com/mapfiles/ms/icons/orange-dot.png\",\n  \"관광거리\": \"http://maps.google.com/mapfiles/ms/icons/purple-dot.png\",\n  \"외국인\": \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\",\n  \"문화\": \"http://maps.google.com/mapfiles/ms/icons/yellow-dot.png\"\n};\nconst Map = ({\n  selectedFilters,\n  gu,\n  currentLat,\n  currentLng\n}) => {\n  _s();\n  const [currentPosition, setCurrentPosition] = useState(defaultCenter);\n  const [allMarkers, setAllMarkers] = useState({});\n  const [filteredMarkers, setFilteredMarkers] = useState([]);\n  const [activeMarker, setActiveMarker] = useState(null);\n  useEffect(() => {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setCurrentPosition({\n          lat: latitude,\n          lng: longitude\n        });\n      }, () => {\n        console.error(\"Geolocation is not supported or permission denied.\");\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n    }\n  }, []);\n  useEffect(() => {\n    console.log(currentLat, currentLng);\n    setCurrentPosition({\n      lat: currentLat,\n      lng: currentLng\n    });\n  }, [currentLat, currentLng]);\n\n  // API에서 데이터 가져올 때 각 마커에 해당하는 카테고리를 추가하도록 수정\n  const fetchData = async category => {\n    try {\n      const response = await fetch(`/awes-api/searchOneCategory?address=${gu}&category=${category}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      const markersWithCategory = data.map(marker => ({\n        ...marker,\n        category: category\n      }));\n      return {\n        [category]: markersWithCategory\n      };\n    } catch (error) {\n      console.error(`Failed to fetch data for category ${category}:`, error);\n      return {\n        [category]: []\n      };\n    }\n  };\n  useEffect(() => {\n    const fetchAllData = async () => {\n      const filtersNames = ['관광거리', '명소', '문화', '쇼핑', '자연', '음식', '외국인'];\n      const promises = filtersNames.map(category => fetchData(category));\n      const results = await Promise.all(promises);\n      const allData = results.reduce((acc, curr) => ({\n        ...acc,\n        ...curr\n      }), {});\n      setAllMarkers(allData);\n      console.log(allData);\n    };\n    fetchAllData();\n  }, [gu]);\n  useEffect(() => {\n    const filteredData = Object.keys(allMarkers).filter(key => selectedFilters.includes(key)).flatMap(key => allMarkers[key]);\n    setFilteredMarkers(filteredData);\n  }, [selectedFilters, allMarkers]);\n  const handleMarkerClick = marker => {\n    setActiveMarker(marker);\n  };\n  const handleInfoWindowClose = () => {\n    setActiveMarker(null);\n  };\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: currentPosition,\n    zoom: 13,\n    children: [/*#__PURE__*/_jsxDEV(MarkerF, {\n      position: currentPosition,\n      title: \"\\uD604\\uC7AC \\uC704\\uCE58\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), \"// \\uD544\\uD130\\uB41C \\uB370\\uC774\\uD130\\uB97C \\uAE30\\uBC18\\uC73C\\uB85C \\uB9C8\\uCEE4 \\uC0DD\\uC131\", Object.keys(allMarkers).filter(key => selectedFilters.includes(key)).flatMap(key => allMarkers[key]).map((marker, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: parseFloat(marker.latitude),\n        lng: parseFloat(marker.longitude)\n      },\n      icon: markerIcons[marker.category] || \"http://maps.google.com/mapfiles/ms/icons/yellow-dot.png\",\n      title: marker.name,\n      onClick: () => handleMarkerClick(marker)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }, this)), activeMarker && /*#__PURE__*/_jsxDEV(InfoWindow, {\n      position: {\n        lat: parseFloat(activeMarker.lat),\n        lng: parseFloat(activeMarker.lng)\n      },\n      onCloseClick: handleInfoWindowClose,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: activeMarker.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC8FC\\uC18C: \", activeMarker.address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC804\\uD654\\uBC88\\uD638: \", activeMarker.phoneNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC6F9\\uC0AC\\uC774\\uD2B8: \", activeMarker.website]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"iuorjmqjUSwwLOBHXS3IkGX4s4g=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","InfoWindow","Marker","MarkerF","jsxDEV","_jsxDEV","containerStyle","width","height","defaultCenter","lat","lng","markerIcons","Map","selectedFilters","gu","currentLat","currentLng","_s","currentPosition","setCurrentPosition","allMarkers","setAllMarkers","filteredMarkers","setFilteredMarkers","activeMarker","setActiveMarker","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","console","error","log","fetchData","category","response","fetch","ok","Error","status","data","json","markersWithCategory","map","marker","fetchAllData","filtersNames","promises","results","Promise","all","allData","reduce","acc","curr","filteredData","Object","keys","filter","key","includes","flatMap","handleMarkerClick","handleInfoWindowClose","mapContainerStyle","center","zoom","children","title","fileName","_jsxFileName","lineNumber","columnNumber","index","parseFloat","icon","name","onClick","onCloseClick","address","phoneNumber","website","_c","$RefreshReg$"],"sources":["/Users/p_kxn_g/Documents/GitHub/awes0514/src/search/Map.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { GoogleMap, InfoWindow, Marker, MarkerF } from '@react-google-maps/api';\nimport \"./Map.css\";\n\nconst containerStyle = {\n  width: '100%',\n  height: '100%'\n};\n\nconst defaultCenter = {\n  lat: 37.5665,\n  lng: 126.9780\n};\n\nconst markerIcons = {\n  \"자연\": \"http://maps.google.com/mapfiles/ms/icons/green-dot.png\",\n  \"쇼핑\": \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\",\n  \"명소\": \"http://maps.google.com/mapfiles/ms/icons/pink-dot.png\",\n  \"음식\": \"http://maps.google.com/mapfiles/ms/icons/orange-dot.png\",\n  \"관광거리\": \"http://maps.google.com/mapfiles/ms/icons/purple-dot.png\",\n  \"외국인\": \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\",\n  \"문화\": \"http://maps.google.com/mapfiles/ms/icons/yellow-dot.png\"\n};\n\nconst Map = ({ selectedFilters ,gu, currentLat, currentLng}) => {\n  const [currentPosition, setCurrentPosition] = useState(defaultCenter);\n  const [allMarkers, setAllMarkers] = useState({});\n  const [filteredMarkers, setFilteredMarkers] = useState([]);\n  const [activeMarker, setActiveMarker] = useState(null);\n\n  useEffect(() => {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const { latitude, longitude } = position.coords;\n        setCurrentPosition({\n          lat: latitude,\n          lng: longitude\n        });\n      }, () => {\n        console.error(\"Geolocation is not supported or permission denied.\");\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n    }\n  }, []);\n  useEffect(() => {\n    console.log(currentLat, currentLng);\n    setCurrentPosition({\n      lat: currentLat,\n      lng: currentLng\n    });\n  }, [currentLat, currentLng]);\n\n    // API에서 데이터 가져올 때 각 마커에 해당하는 카테고리를 추가하도록 수정\n  const fetchData = async (category) => {\n    try {\n      const response = await fetch(`/awes-api/searchOneCategory?address=${gu}&category=${category}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      const markersWithCategory = data.map(marker => ({ ...marker, category: category }));\n      return { [category]: markersWithCategory };\n    } catch (error) {\n      console.error(`Failed to fetch data for category ${category}:`, error);\n      return { [category]: [] };\n    }\n  };\n\n  useEffect(() => {\n    const fetchAllData = async () => {\n      const filtersNames = ['관광거리', '명소', '문화', '쇼핑', '자연', '음식', '외국인'];\n      const promises = filtersNames.map(category => fetchData(category));\n      const results = await Promise.all(promises);\n      const allData = results.reduce((acc, curr) => ({ ...acc, ...curr }), {});\n      setAllMarkers(allData);\n      console.log(allData)\n    };\n\n    fetchAllData();\n  }, [gu]);\n\n  useEffect(() => {\n    const filteredData = Object.keys(allMarkers)\n      .filter(key => selectedFilters.includes(key))\n      .flatMap(key => allMarkers[key]);\n    setFilteredMarkers(filteredData);\n  }, [selectedFilters, allMarkers]);\n\n  const handleMarkerClick = (marker) => {\n    setActiveMarker(marker);\n  };\n\n  const handleInfoWindowClose = () => {\n    setActiveMarker(null);\n  };\n\n  return (\n    <GoogleMap\n      mapContainerStyle={containerStyle}\n      center={currentPosition}\n      zoom={13}\n    >\n      <MarkerF position={currentPosition} title=\"현재 위치\" />\n\n      // 필터된 데이터를 기반으로 마커 생성\n      {Object.keys(allMarkers)\n        .filter(key => selectedFilters.includes(key))\n        .flatMap(key => allMarkers[key])\n        .map((marker, index) => (\n          <Marker\n            key={index}\n            position={{ lat: parseFloat(marker.latitude), lng: parseFloat(marker.longitude) }}\n            icon={markerIcons[marker.category] || \"http://maps.google.com/mapfiles/ms/icons/yellow-dot.png\"}\n            title={marker.name}\n            onClick={() => handleMarkerClick(marker)}\n          />\n      ))}\n      {activeMarker && (\n        <InfoWindow\n          position={{ lat: parseFloat(activeMarker.lat), lng: parseFloat(activeMarker.lng) }}\n          onCloseClick={handleInfoWindowClose}\n        >\n          <div>\n            <h4>{activeMarker.name}</h4>\n            <p>주소: {activeMarker.address}</p>\n            <p>전화번호: {activeMarker.phoneNumber}</p>\n            <p>웹사이트: {activeMarker.website}</p>\n          </div>\n        </InfoWindow>\n      )}\n    </GoogleMap>\n  );\n};\n\nexport default Map;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}