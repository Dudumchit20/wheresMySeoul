{"ast":null,"code":"var _jsxFileName = \"/Users/p_kxn_g/Documents/GitHub/awes0514/src/search/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, InfoWindow, Marker, MarkerF } from '@react-google-maps/api';\nimport \"./Map.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '100%'\n};\nconst defaultCenter = {\n  lat: 37.5665,\n  lng: 126.9780\n};\nconst Map = ({\n  selectedFilters,\n  gu,\n  currentLat,\n  currentLng\n}) => {\n  _s();\n  const [currentPosition, setCurrentPosition] = useState(defaultCenter);\n  const [allMarkers, setAllMarkers] = useState({});\n  const [filteredMarkers, setFilteredMarkers] = useState([]);\n  const [activeMarker, setActiveMarker] = useState(null);\n\n  // 브라우저 지오로케이션 사용하여 위치 설정\n  useEffect(() => {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setCurrentPosition({\n          lat: latitude,\n          lng: longitude\n        });\n      }, () => {\n        console.error(\"Geolocation is not supported or permission denied.\");\n        setCurrentPosition(defaultCenter); // 권한 거부시 기본 위치 사용\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n    }\n  }, []);\n\n  // 좌표 값의 유효성 검사 및 위치 설정\n  useEffect(() => {\n    console.log(\"위치가 바뀌었어요:\", currentLat, currentLng);\n    if (typeof currentLat === 'number' && typeof currentLng === 'number' && isFinite(currentLat) && isFinite(currentLng)) {\n      setCurrentPosition({\n        lat: currentLat,\n        lng: currentLng\n      });\n    }\n  }, [currentLat, currentLng]);\n\n  // 마커 데이터 가져오기\n  const fetchData = async category => {\n    try {\n      const response = await fetch(`/awes-api/searchOneCategory?address=${gu}&category=${category}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      const markersWithCategory = data.map(marker => ({\n        ...marker,\n        category\n      }));\n      return {\n        [category]: markersWithCategory\n      };\n    } catch (error) {\n      console.error(`Failed to fetch data for category ${category}:`, error);\n      return {\n        [category]: []\n      };\n    }\n  };\n\n  // 모든 카테고리의 데이터 가져오기\n  useEffect(() => {\n    const fetchAllData = async () => {\n      const filtersNames = ['관광거리', '명소', '문화', '쇼핑', '자연', '음식', '외국인'];\n      const promises = filtersNames.map(category => fetchData(category));\n      const results = await Promise.all(promises);\n      const allData = results.reduce((acc, curr) => ({\n        ...acc,\n        ...curr\n      }), {});\n      setAllMarkers(allData);\n    };\n    fetchAllData();\n  }, [gu]);\n\n  // 선택된 필터에 따라 마커 필터링\n  useEffect(() => {\n    const filteredData = Object.keys(allMarkers).filter(key => selectedFilters.includes(key)).flatMap(key => allMarkers[key]);\n    setFilteredMarkers(filteredData);\n  }, [selectedFilters, allMarkers]);\n  const handleMarkerClick = marker => {\n    setActiveMarker(marker);\n  };\n  const handleInfoWindowClose = () => {\n    setActiveMarker(null);\n  };\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: containerStyle,\n    center: currentPosition,\n    zoom: 13,\n    children: [/*#__PURE__*/_jsxDEV(MarkerF, {\n      position: currentPosition,\n      title: \"\\uD604\\uC7AC \\uC704\\uCE58\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), filteredMarkers.map((marker, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: parseFloat(marker.latitude),\n        lng: parseFloat(marker.longitude)\n      },\n      icon: markerIcons[marker.category] || \"http://maps.google.com/mapfiles/ms/icons/yellow-dot.png\",\n      title: marker.name,\n      onClick: () => handleMarkerClick(marker)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)), activeMarker && /*#__PURE__*/_jsxDEV(InfoWindow, {\n      position: {\n        lat: parseFloat(activeMarker.latitude),\n        lng: parseFloat(activeMarker.longitude)\n      },\n      onCloseClick: handleInfoWindowClose,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: activeMarker.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC8FC\\uC18C: \", activeMarker.address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC804\\uD654\\uBC88\\uD638: \", activeMarker.phoneNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC6F9\\uC0AC\\uC774\\uD2B8: \", activeMarker.website]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"iuorjmqjUSwwLOBHXS3IkGX4s4g=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","InfoWindow","Marker","MarkerF","jsxDEV","_jsxDEV","containerStyle","width","height","defaultCenter","lat","lng","Map","selectedFilters","gu","currentLat","currentLng","_s","currentPosition","setCurrentPosition","allMarkers","setAllMarkers","filteredMarkers","setFilteredMarkers","activeMarker","setActiveMarker","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","console","error","log","isFinite","fetchData","category","response","fetch","ok","Error","status","data","json","markersWithCategory","map","marker","fetchAllData","filtersNames","promises","results","Promise","all","allData","reduce","acc","curr","filteredData","Object","keys","filter","key","includes","flatMap","handleMarkerClick","handleInfoWindowClose","mapContainerStyle","center","zoom","children","title","fileName","_jsxFileName","lineNumber","columnNumber","index","parseFloat","icon","markerIcons","name","onClick","onCloseClick","address","phoneNumber","website","_c","$RefreshReg$"],"sources":["/Users/p_kxn_g/Documents/GitHub/awes0514/src/search/Map.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { GoogleMap, InfoWindow, Marker, MarkerF } from '@react-google-maps/api';\nimport \"./Map.css\";\n\nconst containerStyle = {\n  width: '100%',\n  height: '100%'\n};\n\nconst defaultCenter = {\n  lat: 37.5665,\n  lng: 126.9780\n};\n\nconst Map = ({ selectedFilters, gu, currentLat, currentLng }) => {\n  const [currentPosition, setCurrentPosition] = useState(defaultCenter);\n  const [allMarkers, setAllMarkers] = useState({});\n  const [filteredMarkers, setFilteredMarkers] = useState([]);\n  const [activeMarker, setActiveMarker] = useState(null);\n\n  // 브라우저 지오로케이션 사용하여 위치 설정\n  useEffect(() => {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const { latitude, longitude } = position.coords;\n        setCurrentPosition({\n          lat: latitude,\n          lng: longitude\n        });\n      }, () => {\n        console.error(\"Geolocation is not supported or permission denied.\");\n        setCurrentPosition(defaultCenter); // 권한 거부시 기본 위치 사용\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n    }\n  }, []);\n\n  // 좌표 값의 유효성 검사 및 위치 설정\n  useEffect(() => {\n    console.log(\"위치가 바뀌었어요:\", currentLat, currentLng);\n    if (typeof currentLat === 'number' && typeof currentLng === 'number' && isFinite(currentLat) && isFinite(currentLng)) {\n      setCurrentPosition({\n        lat: currentLat,\n        lng: currentLng\n      });\n    }\n  }, [currentLat, currentLng]);\n\n  // 마커 데이터 가져오기\n  const fetchData = async (category) => {\n    try {\n      const response = await fetch(`/awes-api/searchOneCategory?address=${gu}&category=${category}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      const markersWithCategory = data.map(marker => ({ ...marker, category }));\n      return { [category]: markersWithCategory };\n    } catch (error) {\n      console.error(`Failed to fetch data for category ${category}:`, error);\n      return { [category]: [] };\n    }\n  };\n\n  // 모든 카테고리의 데이터 가져오기\n  useEffect(() => {\n    const fetchAllData = async () => {\n      const filtersNames = ['관광거리', '명소', '문화', '쇼핑', '자연', '음식', '외국인'];\n      const promises = filtersNames.map(category => fetchData(category));\n      const results = await Promise.all(promises);\n      const allData = results.reduce((acc, curr) => ({ ...acc, ...curr }), {});\n      setAllMarkers(allData);\n    };\n    fetchAllData();\n  }, [gu]);\n\n  // 선택된 필터에 따라 마커 필터링\n  useEffect(() => {\n    const filteredData = Object.keys(allMarkers)\n      .filter(key => selectedFilters.includes(key))\n      .flatMap(key => allMarkers[key]);\n    setFilteredMarkers(filteredData);\n  }, [selectedFilters, allMarkers]);\n\n  const handleMarkerClick = (marker) => {\n    setActiveMarker(marker);\n  };\n\n  const handleInfoWindowClose = () => {\n    setActiveMarker(null);\n  };\n\n  return (\n    <GoogleMap\n      mapContainerStyle={containerStyle}\n      center={currentPosition}\n      zoom={13}\n    >\n      <MarkerF position={currentPosition} title=\"현재 위치\" />\n\n      {filteredMarkers.map((marker, index) => (\n        <Marker\n          key={index}\n          position={{ lat: parseFloat(marker.latitude), lng: parseFloat(marker.longitude) }}\n          icon={markerIcons[marker.category] || \"http://maps.google.com/mapfiles/ms/icons/yellow-dot.png\"}\n          title={marker.name}\n          onClick={() => handleMarkerClick(marker)}\n        />\n      ))}\n      {activeMarker && (\n        <InfoWindow\n          position={{ lat: parseFloat(activeMarker.latitude), lng: parseFloat(activeMarker.longitude) }}\n          onCloseClick={handleInfoWindowClose}\n        >\n          <div>\n            <h4>{activeMarker.name}</h4>\n            <p>주소: {activeMarker.address}</p>\n            <p>전화번호: {activeMarker.phoneNumber}</p>\n            <p>웹사이트: {activeMarker.website}</p>\n          </div>\n        </InfoWindow>\n      )}\n    </GoogleMap>\n  );\n};\n\nexport default Map;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}