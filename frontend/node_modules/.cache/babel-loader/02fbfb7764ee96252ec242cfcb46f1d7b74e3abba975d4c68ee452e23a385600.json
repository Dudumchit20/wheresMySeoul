{"ast":null,"code":"var _jsxFileName = \"/Users/p_kxn_g/Documents/GitHub/wheresMySeoul/frontend/awes/src/recommend/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, InfoWindow, Marker, MarkerF } from '@react-google-maps/api';\nimport \"./Map.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '100%'\n};\nconst defaultCenter = {\n  lat: 37.5665,\n  lng: 126.9780\n};\nconst markerIcons = {\n  \"자연\": \"http://maps.google.com/mapfiles/ms/icons/green-dot.png\",\n  \"쇼핑\": \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\",\n  \"명소\": \"http://maps.google.com/mapfiles/ms/icons/pink-dot.png\",\n  \"음식\": \"http://maps.google.com/mapfiles/ms/icons/orange-dot.png\",\n  \"관광거리\": \"http://maps.google.com/mapfiles/ms/icons/purple-dot.png\",\n  \"외국인\": \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\",\n  \"문화\": \"http://maps.google.com/mapfiles/ms/icons/yellow-dot.png\"\n};\nconst Map = ({\n  allData,\n  selectedFilters,\n  gu,\n  currentLat,\n  currentLng\n}) => {\n  _s();\n  const [currentPosition, setCurrentPosition] = useState(defaultCenter);\n  const [allMarkers, setAllMarkers] = useState({});\n  const [filteredMarkers, setFilteredMarkers] = useState([]);\n  const [activeMarker, setActiveMarker] = useState(null);\n  useEffect(() => {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setCurrentPosition({\n          lat: latitude,\n          lng: longitude\n        });\n      }, () => {\n        console.error(\"Geolocation is not supported or permission denied.\");\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n    }\n  }, []);\n  useEffect(() => {\n    console.log(\"log------------\", allData);\n    setFilteredMarkers(allData);\n    console.log(filteredMarkers);\n  }, [allData]);\n  useEffect(() => {\n    console.log(currentLat, currentLng);\n    setCurrentPosition({\n      lat: currentLat,\n      lng: currentLng\n    });\n  }, [currentLat, currentLng]);\n  useEffect(() => {\n    const filteredData = Object.keys(allMarkers).filter(key => selectedFilters.includes(key)).flatMap(key => allMarkers[key]);\n    setFilteredMarkers(filteredData);\n  }, [selectedFilters, allMarkers]);\n  const handleMarkerClick = marker => {\n    setActiveMarker(marker);\n  };\n  const handleInfoWindowClose = () => {\n    setActiveMarker(null);\n  };\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    className: \"map\",\n    mapContainerStyle: containerStyle,\n    center: currentPosition,\n    zoom: 13,\n    children: [/*#__PURE__*/_jsxDEV(MarkerF, {\n      position: currentPosition,\n      title: \"\\uD604\\uC7AC \\uC704\\uCE58\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), \"// \\uD544\\uD130\\uB41C \\uB370\\uC774\\uD130\\uB97C \\uAE30\\uBC18\\uC73C\\uB85C \\uB9C8\\uCEE4 \\uC0DD\\uC131\", Object.keys(allMarkers).filter(key => selectedFilters.includes(key)).flatMap(key => allMarkers[key]).map((marker, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: parseFloat(marker.latitude),\n        lng: parseFloat(marker.longitude)\n      },\n      icon: markerIcons[marker.category] || \"http://maps.google.com/mapfiles/ms/icons/yellow-dot.png\",\n      title: marker.name,\n      onClick: () => handleMarkerClick(marker)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }, this)), activeMarker && /*#__PURE__*/_jsxDEV(InfoWindow, {\n      position: {\n        lat: parseFloat(activeMarker.lat),\n        lng: parseFloat(activeMarker.lng)\n      },\n      onCloseClick: handleInfoWindowClose,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: activeMarker.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC8FC\\uC18C: \", activeMarker.address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC804\\uD654\\uBC88\\uD638: \", activeMarker.phoneNumber]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uC6F9\\uC0AC\\uC774\\uD2B8: \", activeMarker.website]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"iuorjmqjUSwwLOBHXS3IkGX4s4g=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","InfoWindow","Marker","MarkerF","jsxDEV","_jsxDEV","containerStyle","width","height","defaultCenter","lat","lng","markerIcons","Map","allData","selectedFilters","gu","currentLat","currentLng","_s","currentPosition","setCurrentPosition","allMarkers","setAllMarkers","filteredMarkers","setFilteredMarkers","activeMarker","setActiveMarker","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","console","error","log","filteredData","Object","keys","filter","key","includes","flatMap","handleMarkerClick","marker","handleInfoWindowClose","className","mapContainerStyle","center","zoom","children","title","fileName","_jsxFileName","lineNumber","columnNumber","map","index","parseFloat","icon","category","name","onClick","onCloseClick","address","phoneNumber","website","_c","$RefreshReg$"],"sources":["/Users/p_kxn_g/Documents/GitHub/wheresMySeoul/frontend/awes/src/recommend/Map.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { GoogleMap, InfoWindow, Marker, MarkerF } from '@react-google-maps/api';\nimport \"./Map.css\";\n\nconst containerStyle = {\n  width: '100%',\n  height: '100%'\n};\n\nconst defaultCenter = {\n  lat: 37.5665,\n  lng: 126.9780\n};\n\nconst markerIcons = {\n  \"자연\": \"http://maps.google.com/mapfiles/ms/icons/green-dot.png\",\n  \"쇼핑\": \"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\",\n  \"명소\": \"http://maps.google.com/mapfiles/ms/icons/pink-dot.png\",\n  \"음식\": \"http://maps.google.com/mapfiles/ms/icons/orange-dot.png\",\n  \"관광거리\": \"http://maps.google.com/mapfiles/ms/icons/purple-dot.png\",\n  \"외국인\": \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\",\n  \"문화\": \"http://maps.google.com/mapfiles/ms/icons/yellow-dot.png\"\n};\n\nconst Map = ({ allData, selectedFilters ,gu, currentLat, currentLng} ) => {\n  const [currentPosition, setCurrentPosition] = useState(defaultCenter);\n  const [allMarkers, setAllMarkers] = useState({});\n  const [filteredMarkers, setFilteredMarkers] = useState([]);\n  const [activeMarker, setActiveMarker] = useState(null);\n\n  useEffect(() => {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const { latitude, longitude } = position.coords;\n        setCurrentPosition({\n          lat: latitude,\n          lng: longitude\n        });\n      }, () => {\n        console.error(\"Geolocation is not supported or permission denied.\");\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n    }\n  }, []);\n  useEffect(() => {\n    console.log(\"log------------\", allData)\n    setFilteredMarkers (allData)\n    console.log(filteredMarkers)\n\n  }, [allData]);\n  useEffect(() => {\n    console.log(currentLat, currentLng);\n    setCurrentPosition({\n      lat: currentLat,\n      lng: currentLng\n    });\n  }, [currentLat, currentLng]);\n\n\n  useEffect(() => {\n    const filteredData = Object.keys(allMarkers)\n      .filter(key => selectedFilters.includes(key))\n      .flatMap(key => allMarkers[key]);\n    setFilteredMarkers(filteredData);\n  }, [selectedFilters, allMarkers]);\n\n  const handleMarkerClick = (marker) => {\n    setActiveMarker(marker);\n  };\n\n  const handleInfoWindowClose = () => {\n    setActiveMarker(null);\n  };\n\n  return (\n    <GoogleMap\n      className = \"map\"\n      mapContainerStyle={containerStyle}\n      center={currentPosition}\n      zoom={13}\n    >\n      <MarkerF position={currentPosition} title=\"현재 위치\" />\n\n      // 필터된 데이터를 기반으로 마커 생성\n      {Object.keys(allMarkers)\n        .filter(key => selectedFilters.includes(key))\n        .flatMap(key => allMarkers[key])\n        .map((marker, index) => (\n          <Marker\n            key={index}\n            position={{ lat: parseFloat(marker.latitude), lng: parseFloat(marker.longitude) }}\n            icon={markerIcons[marker.category] || \"http://maps.google.com/mapfiles/ms/icons/yellow-dot.png\"}\n            title={marker.name}\n            onClick={() => handleMarkerClick(marker)}\n          />\n      ))}\n      {activeMarker && (\n        <InfoWindow\n          position={{ lat: parseFloat(activeMarker.lat), lng: parseFloat(activeMarker.lng) }}\n          onCloseClick={handleInfoWindowClose}\n        >\n          <div>\n            <h4>{activeMarker.name}</h4>\n            <p>주소: {activeMarker.address}</p>\n            <p>전화번호: {activeMarker.phoneNumber}</p>\n            <p>웹사이트: {activeMarker.website}</p>\n          </div>\n        </InfoWindow>\n      )}\n    </GoogleMap>\n  );\n};\n\nexport default Map;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}