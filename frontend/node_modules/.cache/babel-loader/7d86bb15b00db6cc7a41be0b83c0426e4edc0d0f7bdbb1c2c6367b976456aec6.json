{"ast":null,"code":"var _jsxFileName = \"/Users/p_kxn_g/Documents/GitHub/wheresMySeoul/frontend/awes/src/language/LanguageContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageContext = /*#__PURE__*/createContext();\nexport const useLanguage = () => {\n  _s();\n  return useContext(LanguageContext);\n};\n_s(useLanguage, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const LanguageProvider = ({\n  children\n}) => {\n  _s2();\n  const [language, setLanguage] = useState('ko');\n  const [translatedText, setTranslatedText] = useState({});\n  const translateText = async (text, targetLang) => {\n    const url = `https://translation.googleapis.com/language/translate/v2?key=YOUR_API_KEY`;\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          q: text,\n          target: targetLang\n        })\n      });\n      const data = await response.json();\n      return data.data.translations[0].translatedText;\n    } catch (error) {\n      console.error('Error translating text:', error);\n      return text; // 에러 시 원본 텍스트 반환\n    }\n  };\n  useEffect(() => {\n    // 예제: 'Welcome' 문자열을 번역\n    translateText('Welcome', language).then(translated => {\n      setTranslatedText({\n        welcome: translated\n      });\n    });\n  }, [language]);\n  const toggleLanguage = lang => {\n    setLanguage(lang);\n  };\n  return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n    value: {\n      language,\n      toggleLanguage,\n      translatedText\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s2(LanguageProvider, \"UHrH1505WKbLC6euJ1ow/OHub6U=\");\n_c = LanguageProvider;\nexport default LanguageProvider;\nvar _c;\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","LanguageContext","useLanguage","_s","LanguageProvider","children","_s2","language","setLanguage","translatedText","setTranslatedText","translateText","text","targetLang","url","response","fetch","method","headers","body","JSON","stringify","q","target","data","json","translations","error","console","then","translated","welcome","toggleLanguage","lang","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/p_kxn_g/Documents/GitHub/wheresMySeoul/frontend/awes/src/language/LanguageContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst LanguageContext = createContext();\n\nexport const useLanguage = () => useContext(LanguageContext);\n\nexport const LanguageProvider = ({ children }) => {\n  const [language, setLanguage] = useState('ko');\n  const [translatedText, setTranslatedText] = useState({});\n\n  const translateText = async (text, targetLang) => {\n    const url = `https://translation.googleapis.com/language/translate/v2?key=YOUR_API_KEY`;\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          q: text,\n          target: targetLang\n        })\n      });\n      const data = await response.json();\n      return data.data.translations[0].translatedText;\n    } catch (error) {\n      console.error('Error translating text:', error);\n      return text; // 에러 시 원본 텍스트 반환\n    }\n  };\n\n  useEffect(() => {\n    // 예제: 'Welcome' 문자열을 번역\n    translateText('Welcome', language).then(translated => {\n      setTranslatedText({ welcome: translated });\n    });\n  }, [language]);\n\n  const toggleLanguage = (lang) => {\n    setLanguage(lang);\n  };\n\n  return (\n    <LanguageContext.Provider value={{ language, toggleLanguage, translatedText }}>\n      {children}\n    </LanguageContext.Provider>\n  );\n};\n\nexport default LanguageProvider;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,eAAe,gBAAGN,aAAa,CAAC,CAAC;AAEvC,OAAO,MAAMO,WAAW,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,eAAe,CAAC;AAAA;AAACE,EAAA,CAAhDD,WAAW;AAExB,OAAO,MAAME,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAChD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC;EAExD,MAAMc,aAAa,GAAG,MAAAA,CAAOC,IAAI,EAAEC,UAAU,KAAK;IAChD,MAAMC,GAAG,GAAI,2EAA0E;IACvF,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;QAChCG,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,CAAC,EAAEV,IAAI;UACPW,MAAM,EAAEV;QACV,CAAC;MACH,CAAC,CAAC;MACF,MAAMW,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI,CAACA,IAAI,CAACE,YAAY,CAAC,CAAC,CAAC,CAACjB,cAAc;IACjD,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,OAAOf,IAAI,CAAC,CAAC;IACf;EACF,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd;IACAa,aAAa,CAAC,SAAS,EAAEJ,QAAQ,CAAC,CAACsB,IAAI,CAACC,UAAU,IAAI;MACpDpB,iBAAiB,CAAC;QAAEqB,OAAO,EAAED;MAAW,CAAC,CAAC;IAC5C,CAAC,CAAC;EACJ,CAAC,EAAE,CAACvB,QAAQ,CAAC,CAAC;EAEd,MAAMyB,cAAc,GAAIC,IAAI,IAAK;IAC/BzB,WAAW,CAACyB,IAAI,CAAC;EACnB,CAAC;EAED,oBACEjC,OAAA,CAACC,eAAe,CAACiC,QAAQ;IAACC,KAAK,EAAE;MAAE5B,QAAQ;MAAEyB,cAAc;MAAEvB;IAAe,CAAE;IAAAJ,QAAA,EAC3EA;EAAQ;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACjC,GAAA,CAzCWF,gBAAgB;AAAAoC,EAAA,GAAhBpC,gBAAgB;AA2C7B,eAAeA,gBAAgB;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}