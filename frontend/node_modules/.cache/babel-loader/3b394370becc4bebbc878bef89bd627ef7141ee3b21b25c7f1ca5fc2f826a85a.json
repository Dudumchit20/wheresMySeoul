{"ast":null,"code":"var _jsxFileName = \"/Users/p_kxn_g/Documents/GitHub/wheresMySeoul/front/src/TextField.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TextField() {\n  _s();\n  const inputStyle = {\n    color: \"black\",\n    border: \"0px solid gray\",\n    borderRadius: \"5px\",\n    width: \"100%\",\n    // 너비를 100%로 설정하여 부모 요소의 너비를 꽉 채우도록 함\n    height: \"40px\",\n    margin: \"0px 10px\",\n    outline: \"none\" // 텍스트 필드를 터치했을 때 생기는 기본 테두리를 없애는 스타일\n  };\n  const textFieldStyle = {\n    flex: 1,\n    fontSize: \"20px\",\n    // 올바른 키 이름인 fontSize로 수정\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\" /* 세로 중앙 정렬 */\n  };\n  const [inputValue, setInputValue] = useState('');\n  const handleChange = event => {\n    setInputValue(event.target.value);\n  };\n  const handleClear = () => {\n    setInputValue('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: textFieldStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: inputValue,\n      onChange: handleChange,\n      style: inputStyle,\n      placeholder: \"\\uC6D0\\uD558\\uB294 \\uC704\\uCE58\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button_none\",\n      onClick: handleClear,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/png/close.png\",\n        alt: \"close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(TextField, \"SORcW8kVWUa8fZ+un8oXhp/OLnk=\");\n_c = TextField;\nexport default TextField;\nvar _c;\n$RefreshReg$(_c, \"TextField\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TextField","_s","inputStyle","color","border","borderRadius","width","height","margin","outline","textFieldStyle","flex","fontSize","display","flexDirection","alignItems","inputValue","setInputValue","handleChange","event","target","value","handleClear","style","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/p_kxn_g/Documents/GitHub/wheresMySeoul/front/src/TextField.js"],"sourcesContent":["import React, { useState } from 'react';\nimport \"./App.css\";\nfunction TextField() {\n  const inputStyle = {\n    color: \"black\",\n    border: \"0px solid gray\",\n    borderRadius: \"5px\",\n    width: \"100%\", // 너비를 100%로 설정하여 부모 요소의 너비를 꽉 채우도록 함\n    height: \"40px\",\n    margin: \"0px 10px\",\n    outline: \"none\" // 텍스트 필드를 터치했을 때 생기는 기본 테두리를 없애는 스타일\n\n  };\n  const textFieldStyle = {\n    flex: 1,\n    fontSize: \"20px\", // 올바른 키 이름인 fontSize로 수정\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\" /* 세로 중앙 정렬 */\n  };\n  const [inputValue, setInputValue] = useState('');\n\n  const handleChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  const handleClear = () => {\n    setInputValue('');\n  };\n\n\n  return (\n        <div style={textFieldStyle}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleChange}\n                style={inputStyle}\n                placeholder=\"원하는 위치를 입력하세요\"\n            />\n            <button className=\"button_none\" onClick={handleClear}>\n                <img src=\"/png/close.png\" alt=\"close\" /> \n            </button>\n            </div>\n    \n  );\n}\n\nexport default TextField;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnB,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,UAAU,GAAG;IACjBC,KAAK,EAAE,OAAO;IACdC,MAAM,EAAE,gBAAgB;IACxBC,YAAY,EAAE,KAAK;IACnBC,KAAK,EAAE,MAAM;IAAE;IACfC,MAAM,EAAE,MAAM;IACdC,MAAM,EAAE,UAAU;IAClBC,OAAO,EAAE,MAAM,CAAC;EAElB,CAAC;EACD,MAAMC,cAAc,GAAG;IACrBC,IAAI,EAAE,CAAC;IACPC,QAAQ,EAAE,MAAM;IAAE;IAClBC,OAAO,EAAE,MAAM;IACfC,aAAa,EAAE,KAAK;IACpBC,UAAU,EAAE,QAAQ,CAAC;EACvB,CAAC;EACD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMqB,YAAY,GAAIC,KAAK,IAAK;IAC9BF,aAAa,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBL,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;EAGD,oBACMlB,OAAA;IAAKwB,KAAK,EAAEb,cAAe;IAAAc,QAAA,gBACvBzB,OAAA;MACI0B,IAAI,EAAC,MAAM;MACXJ,KAAK,EAAEL,UAAW;MAClBU,QAAQ,EAAER,YAAa;MACvBK,KAAK,EAAErB,UAAW;MAClByB,WAAW,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACFhC,OAAA;MAAQiC,SAAS,EAAC,aAAa;MAACC,OAAO,EAAEX,WAAY;MAAAE,QAAA,eACjDzB,OAAA;QAAKmC,GAAG,EAAC,gBAAgB;QAACC,GAAG,EAAC;MAAO;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAGlB;AAAC9B,EAAA,CA5CQD,SAAS;AAAAoC,EAAA,GAATpC,SAAS;AA8ClB,eAAeA,SAAS;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}