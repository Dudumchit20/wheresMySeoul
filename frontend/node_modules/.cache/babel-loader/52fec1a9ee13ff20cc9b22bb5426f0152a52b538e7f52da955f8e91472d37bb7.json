{"ast":null,"code":"var _jsxFileName = \"/Users/p_kxn_g/Documents/GitHub/wheresMySeoul/frontend/awes/src/search/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '100%'\n};\n\n// 서울의 초기 위치\nconst defaultCenter = {\n  lat: 37.5665,\n  lng: 126.9780\n};\nconst mockData = [\n// 자연\n{\n  type: \"자연\",\n  name: \"한강공원\",\n  contentUrl: \"http://example.com/hanriverpark\",\n  address: \"서울특별시 영등포구 여의동로 330\",\n  newAddress: \"서울특별시 영등포구 여의도동 84-7\",\n  phoneNumber: \"번호없음\",\n  website: \"웹사이트없음\",\n  lat: 37.5280,\n  lng: 126.9326\n},\n// 쇼핑\n{\n  type: \"쇼핑\",\n  name: \"명동 쇼핑거리\",\n  contentUrl: \"http://example.com/myeongdongshopping\",\n  address: \"서울특별시 중구 명동길 16\",\n  newAddress: \"서울특별시 중구 명동1가 33-1\",\n  phoneNumber: \"02-1234-5678\",\n  website: \"http://myeongdong.com\",\n  lat: 37.5600,\n  lng: 126.9856\n},\n// 명소\n{\n  type: \"명소\",\n  name: \"남산타워\",\n  contentUrl: \"http://example.com/nseoultower\",\n  address: \"서울특별시 용산구 남산공원길 105\",\n  newAddress: \"서울특별시 용산구 남산동2가 산1-3\",\n  phoneNumber: \"02-1234-5679\",\n  website: \"http://nseoultower.com\",\n  lat: 37.5512,\n  lng: 126.9882\n},\n// 음식\n{\n  type: \"음식\",\n  name: \"광장시장\",\n  contentUrl: \"http://example.com/gwangjangmarket\",\n  address: \"서울특별시 종로구 창경궁로 88\",\n  newAddress: \"서울특별시 종로구 예지동 88\",\n  phoneNumber: \"02-1234-5680\",\n  website: \"http://gwangjangmarket.com\",\n  lat: 37.5700,\n  lng: 126.9995\n},\n// 관광 거리\n{\n  type: \"관광 거리\",\n  name: \"인사동길\",\n  contentUrl: \"http://example.com/insadongstreet\",\n  address: \"서울특별시 종로구 인사동길 62\",\n  newAddress: \"서울특별시 종로구 인사동 194-2\",\n  phoneNumber: \"번호없음\",\n  website: \"http://insadongstreet.com\",\n  lat: 37.5711,\n  lng: 126.9858\n},\n// 외국인\n{\n  type: \"외국인\",\n  name: \"이태원 관광특구\",\n  contentUrl: \"http://example.com/itaewontourism\",\n  address: \"서울특별시 용산구 이태원로 170\",\n  newAddress: \"서울특별시 용산구 이태원동 34-21\",\n  phoneNumber: \"02-1234-5681\",\n  website: \"http://itaewontourism.com\",\n  lat: 37.5345,\n  lng: 126.9946\n}];\nconst Map = ({\n  selectedFilters\n}) => {\n  _s();\n  const [currentPosition, setCurrentPosition] = useState(defaultCenter);\n  const [markers, setMarkers] = useState([]);\n\n  // 현재 위치 설정\n  useEffect(() => {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setCurrentPosition({\n          lat: latitude,\n          lng: longitude\n        });\n      }, () => {\n        console.error(\"Geolocation is not supported or permission denied.\");\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n    }\n  }, []);\n  useEffect(() => {\n    // 선택된 필터에 해당하는 목업 데이터를 마커로 설정\n    const filteredMarkers = mockData.filter(item => selectedFilters.includes(item.type));\n    setMarkers(filteredMarkers);\n  }, [selectedFilters]);\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyCoBqm6ZJlc2QRPAEZ8Op36nAklnfj5DsE\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: currentPosition,\n      zoom: 13,\n      children: markers.map((marker, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: marker.lat,\n          lng: marker.lng\n        },\n        title: marker.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"+i+kGqkHpHSj01putLT8J8lKAq8=\");\n_c = Map;\nexport default Map;\n//   // 선택된 필터에 따라 API 호출 및 마커 설정\n//   useEffect(() => {\n//     if (selectedFilters.length === 0) {\n//       setMarkers([]); // 필터가 선택되지 않으면 마커 초기화\n//       return;\n//     }\n\n//     const fetchMarkers = async () => {\n//       const allMarkers = [];\n//       for (const filter of selectedFilters) {\n//         console.log(filter)\n//         const response = await fetch(`http://54.172.167.243:8080/searchOneCategory?address=중구&category=${filter}`);\n//         const data = await response.json();\n//         console.log(data)\n//         const newMarkers = data.map(item => ({\n//           lat: item.latitude,\n//           lng: item.longitude,\n//           name: item.name\n//         }));\n//         allMarkers.push(...newMarkers);\n//       }\n//       setMarkers(allMarkers);\n//     };\n\n//     fetchMarkers();\n//   }, [selectedFilters]);\n\n//   return (\n//     <LoadScript googleMapsApiKey=\"AIzaSyCoBqm6ZJlc2QRPAEZ8Op36nAklnfj5DsE\">\n//       <GoogleMap\n//         mapContainerStyle={containerStyle}\n//         center={currentPosition}\n//         zoom={13}\n//       >\n//         {/* 현재 위치 마커 */}\n//         <Marker position={currentPosition} title=\"현재 위치\" />\n\n//         {/* 응답 데이터 마커 */}\n//         {markers.map((marker, index) => (\n//           <Marker\n//             key={index}\n//             position={{ lat: marker.lat, lng: marker.lng }}\n//             title={marker.name}\n//           />\n//         ))}\n//       </GoogleMap>\n//     </LoadScript>\n//   );\n// };\n\n// export default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","LoadScript","Marker","jsxDEV","_jsxDEV","containerStyle","width","height","defaultCenter","lat","lng","mockData","type","name","contentUrl","address","newAddress","phoneNumber","website","Map","selectedFilters","_s","currentPosition","setCurrentPosition","markers","setMarkers","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","console","error","filteredMarkers","filter","item","includes","googleMapsApiKey","children","mapContainerStyle","center","zoom","map","marker","index","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/p_kxn_g/Documents/GitHub/wheresMySeoul/frontend/awes/src/search/Map.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\n\nconst containerStyle = {\n  width: '100%',\n  height: '100%'\n};\n\n// 서울의 초기 위치\nconst defaultCenter = {\n  lat: 37.5665,\n  lng: 126.9780\n};\n\nconst mockData = [\n  // 자연\n  {\n    type: \"자연\",\n    name: \"한강공원\",\n    contentUrl: \"http://example.com/hanriverpark\",\n    address: \"서울특별시 영등포구 여의동로 330\",\n    newAddress: \"서울특별시 영등포구 여의도동 84-7\",\n    phoneNumber: \"번호없음\",\n    website: \"웹사이트없음\",\n    lat: 37.5280,\n    lng: 126.9326\n  },\n  // 쇼핑\n  {\n    type: \"쇼핑\",\n    name: \"명동 쇼핑거리\",\n    contentUrl: \"http://example.com/myeongdongshopping\",\n    address: \"서울특별시 중구 명동길 16\",\n    newAddress: \"서울특별시 중구 명동1가 33-1\",\n    phoneNumber: \"02-1234-5678\",\n    website: \"http://myeongdong.com\",\n    lat: 37.5600,\n    lng: 126.9856\n  },\n  // 명소\n  {\n    type: \"명소\",\n    name: \"남산타워\",\n    contentUrl: \"http://example.com/nseoultower\",\n    address: \"서울특별시 용산구 남산공원길 105\",\n    newAddress: \"서울특별시 용산구 남산동2가 산1-3\",\n    phoneNumber: \"02-1234-5679\",\n    website: \"http://nseoultower.com\",\n    lat: 37.5512,\n    lng: 126.9882\n  },\n  // 음식\n  {\n    type: \"음식\",\n    name: \"광장시장\",\n    contentUrl: \"http://example.com/gwangjangmarket\",\n    address: \"서울특별시 종로구 창경궁로 88\",\n    newAddress: \"서울특별시 종로구 예지동 88\",\n    phoneNumber: \"02-1234-5680\",\n    website: \"http://gwangjangmarket.com\",\n    lat: 37.5700,\n    lng: 126.9995\n  },\n  // 관광 거리\n  {\n    type: \"관광 거리\",\n    name: \"인사동길\",\n    contentUrl: \"http://example.com/insadongstreet\",\n    address: \"서울특별시 종로구 인사동길 62\",\n    newAddress: \"서울특별시 종로구 인사동 194-2\",\n    phoneNumber: \"번호없음\",\n    website: \"http://insadongstreet.com\",\n    lat: 37.5711,\n    lng: 126.9858\n  },\n  // 외국인\n  {\n    type: \"외국인\",\n    name: \"이태원 관광특구\",\n    contentUrl: \"http://example.com/itaewontourism\",\n    address: \"서울특별시 용산구 이태원로 170\",\n    newAddress: \"서울특별시 용산구 이태원동 34-21\",\n    phoneNumber: \"02-1234-5681\",\n    website: \"http://itaewontourism.com\",\n    lat: 37.5345,\n    lng: 126.9946\n  }\n];\n\n\nconst Map = ({ selectedFilters }) => {\n  const [currentPosition, setCurrentPosition] = useState(defaultCenter);\n  const [markers, setMarkers] = useState([]);\n\n  // 현재 위치 설정\n  useEffect(() => {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const { latitude, longitude } = position.coords;\n        setCurrentPosition({\n          lat: latitude,\n          lng: longitude\n        });\n      }, () => {\n        console.error(\"Geolocation is not supported or permission denied.\");\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n    }\n  }, []);\n  useEffect(() => {\n    // 선택된 필터에 해당하는 목업 데이터를 마커로 설정\n    const filteredMarkers = mockData.filter(item => selectedFilters.includes(item.type));\n    setMarkers(filteredMarkers);\n  }, [selectedFilters]);\n\n  return (\n    <LoadScript googleMapsApiKey=\"AIzaSyCoBqm6ZJlc2QRPAEZ8Op36nAklnfj5DsE\">\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={currentPosition}\n        zoom={13}\n      >\n        {markers.map((marker, index) => (\n          <Marker\n            key={index}\n            position={{ lat: marker.lat, lng: marker.lng }}\n            title={marker.name}\n          />\n        ))}\n      </GoogleMap>\n    </LoadScript>\n  );\n};\n\nexport default Map;\n//   // 선택된 필터에 따라 API 호출 및 마커 설정\n//   useEffect(() => {\n//     if (selectedFilters.length === 0) {\n//       setMarkers([]); // 필터가 선택되지 않으면 마커 초기화\n//       return;\n//     }\n\n//     const fetchMarkers = async () => {\n//       const allMarkers = [];\n//       for (const filter of selectedFilters) {\n//         console.log(filter)\n//         const response = await fetch(`http://54.172.167.243:8080/searchOneCategory?address=중구&category=${filter}`);\n//         const data = await response.json();\n//         console.log(data)\n//         const newMarkers = data.map(item => ({\n//           lat: item.latitude,\n//           lng: item.longitude,\n//           name: item.name\n//         }));\n//         allMarkers.push(...newMarkers);\n//       }\n//       setMarkers(allMarkers);\n//     };\n\n//     fetchMarkers();\n//   }, [selectedFilters]);\n\n//   return (\n//     <LoadScript googleMapsApiKey=\"AIzaSyCoBqm6ZJlc2QRPAEZ8Op36nAklnfj5DsE\">\n//       <GoogleMap\n//         mapContainerStyle={containerStyle}\n//         center={currentPosition}\n//         zoom={13}\n//       >\n//         {/* 현재 위치 마커 */}\n//         <Marker position={currentPosition} title=\"현재 위치\" />\n\n//         {/* 응답 데이터 마커 */}\n//         {markers.map((marker, index) => (\n//           <Marker\n//             key={index}\n//             position={{ lat: marker.lat, lng: marker.lng }}\n//             title={marker.name}\n//           />\n//         ))}\n//       </GoogleMap>\n//     </LoadScript>\n//   );\n// };\n\n// export default Map;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}