{"ast":null,"code":"var _jsxFileName = \"/Users/p_kxn_g/Documents/GitHub/wheresMySeoul/frontend/awes/src/TextField.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { setKey, fromLatLng, fromAddress } from \"react-geocode\";\nimport \"./Home.css\";\n\n// Google API 키를 설정합니다.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GOOGLE_MAPS_API_KEY = \"YOUR_API_KEY\"; // 실제 키로 변경하세요.\nsetKey(GOOGLE_MAPS_API_KEY);\nfunction LocationSearchField() {\n  _s();\n  const inputStyle = {\n    color: \"black\",\n    border: \"0px solid gray\",\n    borderRadius: \"5px\",\n    width: \"100%\",\n    height: \"40px\",\n    margin: \"0px 10px\",\n    outline: \"none\"\n  };\n  const textFieldStyle = {\n    flex: 1,\n    fontSize: \"20px\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  };\n  const [inputValue, setInputValue] = useState('');\n  const [currentLocation, setCurrentLocation] = useState('');\n  const [searchResults, setSearchResults] = useState(''); // 검색 결과를 저장할 상태 추가\n\n  // 현재 위치 찾기\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n\n        // 위도와 경도를 기반으로 역지오코딩\n        fromLatLng(latitude, longitude).then(({\n          results\n        }) => {\n          if (results && results.length > 0) {\n            const address = results[0].formatted_address;\n            setCurrentLocation(address);\n            setInputValue(address);\n          } else {\n            setInputValue(\"주소를 찾을 수 없습니다.\");\n          }\n        }).catch(error => {\n          console.error(\"Geocoding error:\", error);\n          setInputValue(\"Geocoding error.\");\n        });\n      }, error => {\n        console.error(\"Geolocation error:\", error);\n        setInputValue(\"Location access denied.\");\n      });\n    } else {\n      setInputValue(\"Geolocation not supported.\");\n    }\n  }, []);\n  const handleSearch = () => {\n    fromAddress(inputValue).then(({\n      results\n    }) => {\n      console.log(results); // API로부터 반환된 결과를 콘솔에 출력하여 확인합니다.\n      if (results && results.length > 0) {\n        const address = results[0].formatted_address;\n        const isSeoul = address.includes(\"Seoul\"); // 반환된 주소에 'Seoul'이 포함되어 있는지 확인합니다.\n\n        if (isSeoul) {\n          setCurrentLocation(address); // 검색된 주소를 현재 위치로 설정합니다.\n          setSearchResults(address); // 검색 결과 업데이트\n        } else {\n          setSearchResults(\"서울 내에서만 검색할 수 있습니다.\"); // 서울 외의 지역이 검색된 경우 경고 메시지를 표시합니다.\n        }\n      } else {\n        setSearchResults(\"주소를 찾을 수 없습니다.\"); // 검색 결과가 없는 경우 메시지를 표시합니다.\n      }\n    }).catch(error => {\n      console.error(\"Geocoding error:\", error);\n      setSearchResults(\"Geocoding error.\"); // API 호출 중 오류가 발생한 경우 오류 메시지를 표시합니다.\n    });\n  };\n  const handleChange = event => {\n    setInputValue(event.target.value);\n  };\n\n  // 엔터키로 검색\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      handleSearch();\n    }\n  };\n  const handleClear = () => {\n    setInputValue('');\n    setCurrentLocation('');\n    setSearchResults(''); // 검색 결과도 지웁니다.\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location_button\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button_none\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/png/search.png\",\n          alt: \"search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: textFieldStyle,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: inputValue,\n          onChange: handleChange,\n          onKeyPress: handleKeyPress,\n          style: inputStyle,\n          placeholder: \"\\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD558\\uAC70\\uB098 \\uD604\\uC7AC \\uC704\\uCE58\\uB97C \\uCC3E\\uC73C\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button_none\",\n          onClick: handleClear,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/png/close.png\",\n            alt: \"close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uD604\\uC7AC \\uC704\\uCE58: \", currentLocation]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uAC80\\uC0C9 \\uACB0\\uACFC: \", searchResults]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(LocationSearchField, \"kIsuI9VaZVxjGawrwwxxrnFyRdY=\");\n_c = LocationSearchField;\nexport default LocationSearchField;\nvar _c;\n$RefreshReg$(_c, \"LocationSearchField\");","map":{"version":3,"names":["React","useState","useEffect","setKey","fromLatLng","fromAddress","jsxDEV","_jsxDEV","GOOGLE_MAPS_API_KEY","LocationSearchField","_s","inputStyle","color","border","borderRadius","width","height","margin","outline","textFieldStyle","flex","fontSize","display","flexDirection","alignItems","inputValue","setInputValue","currentLocation","setCurrentLocation","searchResults","setSearchResults","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","then","results","length","address","formatted_address","catch","error","console","handleSearch","log","isSeoul","includes","handleChange","event","target","value","handleKeyPress","key","handleClear","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","style","type","onChange","onKeyPress","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/p_kxn_g/Documents/GitHub/wheresMySeoul/frontend/awes/src/TextField.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { setKey, fromLatLng, fromAddress } from \"react-geocode\";\nimport \"./Home.css\";\n\n// Google API 키를 설정합니다.\nconst GOOGLE_MAPS_API_KEY = \"YOUR_API_KEY\"; // 실제 키로 변경하세요.\nsetKey(GOOGLE_MAPS_API_KEY);\n\nfunction LocationSearchField() {\n  const inputStyle = {\n    color: \"black\",\n    border: \"0px solid gray\",\n    borderRadius: \"5px\",\n    width: \"100%\",\n    height: \"40px\",\n    margin: \"0px 10px\",\n    outline: \"none\"\n  };\n\n  const textFieldStyle = {\n    flex: 1,\n    fontSize: \"20px\",\n    display: \"flex\",\n    flexDirection: \"row\",\n    alignItems: \"center\"\n  };\n\n  const [inputValue, setInputValue] = useState('');\n  const [currentLocation, setCurrentLocation] = useState('');\n  const [searchResults, setSearchResults] = useState(''); // 검색 결과를 저장할 상태 추가\n\n  // 현재 위치 찾기\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const { latitude, longitude } = position.coords;\n\n        // 위도와 경도를 기반으로 역지오코딩\n        fromLatLng(latitude, longitude)\n          .then(({ results }) => {\n            if (results && results.length > 0) {\n              const address = results[0].formatted_address;\n              setCurrentLocation(address);\n              setInputValue(address);\n            } else {\n              setInputValue(\"주소를 찾을 수 없습니다.\");\n            }\n          })\n          .catch(error => {\n            console.error(\"Geocoding error:\", error);\n            setInputValue(\"Geocoding error.\");\n          });\n      }, error => {\n        console.error(\"Geolocation error:\", error);\n        setInputValue(\"Location access denied.\");\n      });\n    } else {\n      setInputValue(\"Geolocation not supported.\");\n    }\n  }, []);\n\n  const handleSearch = () => {\n    fromAddress(inputValue)\n      .then(({ results }) => {\n        console.log(results); // API로부터 반환된 결과를 콘솔에 출력하여 확인합니다.\n        if (results && results.length > 0) {\n          const address = results[0].formatted_address;\n          const isSeoul = address.includes(\"Seoul\"); // 반환된 주소에 'Seoul'이 포함되어 있는지 확인합니다.\n\n          if (isSeoul) {\n            setCurrentLocation(address); // 검색된 주소를 현재 위치로 설정합니다.\n            setSearchResults(address); // 검색 결과 업데이트\n          } else {\n            setSearchResults(\"서울 내에서만 검색할 수 있습니다.\"); // 서울 외의 지역이 검색된 경우 경고 메시지를 표시합니다.\n          }\n        } else {\n          setSearchResults(\"주소를 찾을 수 없습니다.\"); // 검색 결과가 없는 경우 메시지를 표시합니다.\n        }\n      })\n      .catch(error => {\n        console.error(\"Geocoding error:\", error);\n        setSearchResults(\"Geocoding error.\"); // API 호출 중 오류가 발생한 경우 오류 메시지를 표시합니다.\n      });\n  };\n\n  const handleChange = (event) => {\n    setInputValue(event.target.value);\n  };\n\n  // 엔터키로 검색\n  const handleKeyPress = (event) => {\n    if (event.key === 'Enter') {\n      handleSearch();\n    }\n  };\n\n  const handleClear = () => {\n    setInputValue('');\n    setCurrentLocation('');\n    setSearchResults(''); // 검색 결과도 지웁니다.\n  };\n\n  return (\n    <div>\n      <div className=\"location_button\">\n        <button className=\"button_none\">\n          <img src=\"/png/search.png\" alt=\"search\" />\n        </button>\n        <div style={textFieldStyle}>\n          <input\n            type=\"text\"\n            value={inputValue}\n            onChange={handleChange}\n            onKeyPress={handleKeyPress}\n            style={inputStyle}\n            placeholder=\"주소를 입력하거나 현재 위치를 찾으세요\"\n          />\n          <button className=\"button_none\" onClick={handleClear}>\n            <img src=\"/png/close.png\" alt=\"close\" />\n          </button>\n        </div>\n      </div>\n      <p>현재 위치: {currentLocation}</p>\n      <p>검색 결과: {searchResults}</p> {/* 검색 결과 표시 */}\n    </div>\n  );\n}\n\nexport default LocationSearchField;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}